"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2174],{8775:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"SetUp/DevelopmentSetUpProcess/LocalAPISetup","title":"Local API Setup","description":"Configure the VA Mobile app to use a local vets-api instance with Mocked Authentication for offline development.","source":"@site/gettingStarted/SetUp/DevelopmentSetUpProcess/LocalAPISetup.md","sourceDirName":"SetUp/DevelopmentSetUpProcess","slug":"/SetUp/DevelopmentSetUpProcess/LocalAPISetup","permalink":"/va-mobile-app/gettingStarted/SetUp/DevelopmentSetUpProcess/LocalAPISetup","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Local API Setup"},"sidebar":"tutorialSidebar","previous":{"title":"Tool setup","permalink":"/va-mobile-app/gettingStarted/SetUp/DevelopmentSetUpProcess/QA resources/tool setup/"},"next":{"title":"Pull requests","permalink":"/va-mobile-app/gettingStarted/SetUp/Pull Requests/"}}');var t=i(74848),l=i(28453);const r={title:"Local API Setup"},o="Local API Setup with Mocked Authentication",c={},a=[{value:"Quick Start",id:"quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Custom URL",id:"custom-url",level:3},{value:"How It Works",id:"how-it-works",level:2},{value:"Authentication Flow",id:"authentication-flow",level:3},{value:"Native OAuth Implementation",id:"native-oauth-implementation",level:3},{value:"Available Test Users",id:"available-test-users",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"&quot;Invalid client_id&quot; Error",id:"invalid-client_id-error",level:3},{value:"No Users in Dropdown",id:"no-users-in-dropdown",level:3},{value:"JWT Validation Fails",id:"jwt-validation-fails",level:3},{value:"API 404 Errors",id:"api-404-errors",level:3},{value:"MPI/External Service Errors",id:"mpiexternal-service-errors",level:3},{value:"Switching Environments",id:"switching-environments",level:2},{value:"Related Documentation",id:"related-documentation",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Modified Files",id:"modified-files",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"local-api-setup-with-mocked-authentication",children:"Local API Setup with Mocked Authentication"})}),"\n",(0,t.jsx)(n.p,{children:"Configure the VA Mobile app to use a local vets-api instance with Mocked Authentication for offline development."}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# In VAMobile directory\nyarn env:local\nyarn start:local\nyarn ios  # or yarn android\n"})}),"\n",(0,t.jsx)(n.p,{children:'Then tap "Sign in" in the app and select a test user from the dropdown.'}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"vets-api running locally"})," on port 3000"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd /path/to/vets-api\nbundle exec rails s\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"vets-api-mockdata"})," cloned and configured"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/department-of-veterans-affairs/vets-api-mockdata.git\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"vets-api configured"})," for mocked authentication in ",(0,t.jsx)(n.code,{children:"config/settings.local.yml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"mpi:\n  mock: true\n\nbetamocks:\n  enabled: true\n  cache_dir: ../vets-api-mockdata\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Database seeded"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd vets-api\nbundle exec rails db:seed\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SignIn client configured"})," for mobile app:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# In vets-api Rails console\nbundle exec rails c\n\nSignIn::ClientConfig.find_or_create_by(client_id: 'vamock-mobile') do |config|\n  config.redirect_uri = 'vamobile://login-success'\n  config.authentication = 'cookie'\n  config.anti_csrf = true\n  config.pkce = true\n  config.shared_sessions = false\nend\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"yarn env:local"})," command sets:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"API_ROOT=http://localhost:3000/mobile"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"AUTH_SIS_ENDPOINT=http://localhost:3000/v0/sign_in/authorize"})}),"\n",(0,t.jsx)(n.li,{children:"All other auth endpoints point to localhost"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"custom-url",children:"Custom URL"}),"\n",(0,t.jsx)(n.p,{children:"For physical device testing or different ports:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Different port\n./env/env.sh -e local -d true -l "http://localhost:8080"\n\n# Physical device (use your computer\'s IP)\n./env/env.sh -e local -d true -l "http://192.168.1.100:3000"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Make sure vets-api is configured to listen on ",(0,t.jsx)(n.code,{children:"0.0.0.0"})," (all interfaces)."]}),"\n",(0,t.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsx)(n.h3,{id:"authentication-flow",children:"Authentication Flow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:'User taps "Sign in"'}),"\n",(0,t.jsx)(n.li,{children:"Native browser opens to local vets-api with mocked auth UI"}),"\n",(0,t.jsx)(n.li,{children:"User selects test user from dropdown"}),"\n",(0,t.jsx)(n.li,{children:"vets-api creates session and generates JWT"}),"\n",(0,t.jsxs)(n.li,{children:["Browser redirects back: ",(0,t.jsx)(n.code,{children:"vamobile://login-success?code=..."})]}),"\n",(0,t.jsx)(n.li,{children:"App exchanges code for access token"}),"\n",(0,t.jsx)(n.li,{children:"App makes authenticated API requests"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"native-oauth-implementation",children:"Native OAuth Implementation"}),"\n",(0,t.jsx)(n.p,{children:"The mobile app uses native authentication sessions for security:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"iOS"}),": ",(0,t.jsx)(n.code,{children:"ASWebAuthenticationSession"})," in ",(0,t.jsx)(n.code,{children:"ios/RNAuthSession.swift"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Android"}),": ",(0,t.jsx)(n.code,{children:"CustomTabsIntent"})," in ",(0,t.jsx)(n.code,{children:"android/.../CustomTabsIntentModule.kt"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These automatically detect local URLs and add required parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"client_id=vamock-mobile"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"type=idme"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"acr=min"})}),"\n",(0,t.jsxs)(n.li,{children:["NO ",(0,t.jsx)(n.code,{children:"scope"})," (vamock client doesn't support it)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For staging/production, they add ",(0,t.jsx)(n.code,{children:"scope=device_sso"})," instead."]}),"\n",(0,t.jsx)(n.h2,{id:"available-test-users",children:"Available Test Users"}),"\n",(0,t.jsxs)(n.p,{children:["Test users are defined in ",(0,t.jsx)(n.a,{href:"https://github.com/department-of-veterans-affairs/vets-api-mockdata/tree/master/credentials",children:"vets-api-mockdata/credentials"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Common examples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Greg Anderson"})," (idme): this user has mocks available for all services necessary to get signed in and run the API calls on the home screen."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"invalid-client_id-error",children:'"Invalid client_id" Error'}),"\n",(0,t.jsx)(n.p,{children:"Check vets-api client configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"bundle exec rails c\nSignIn::ClientConfig.find_by(client_id: 'vamock-mobile')\n# Should exist with redirect_uri = 'vamobile://login-success'\n"})}),"\n",(0,t.jsx)(n.p,{children:"If missing, create it (see Prerequisites above)."}),"\n",(0,t.jsx)(n.h3,{id:"no-users-in-dropdown",children:"No Users in Dropdown"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Verify vets-api-mockdata is cloned"}),"\n",(0,t.jsxs)(n.li,{children:["Check ",(0,t.jsx)(n.code,{children:"betamocks.cache_dir"})," in ",(0,t.jsx)(n.code,{children:"config/settings.local.yml"})]}),"\n",(0,t.jsx)(n.li,{children:"Restart vets-api"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"jwt-validation-fails",children:"JWT Validation Fails"}),"\n",(0,t.jsx)(n.p,{children:"Ensure all auth endpoints point to localhost:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cat env/.env | grep AUTH_SIS\n# All should be http://localhost:3000/*\n"})}),"\n",(0,t.jsx)(n.h3,{id:"api-404-errors",children:"API 404 Errors"}),"\n",(0,t.jsxs)(n.p,{children:["The app automatically appends ",(0,t.jsx)(n.code,{children:"/mobile"})," to API_ROOT:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.code,{children:"http://localhost:3000/mobile/v0/user"})]}),"\n",(0,t.jsxs)(n.li,{children:["\u274c ",(0,t.jsx)(n.code,{children:"http://localhost:3000/v0/user"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"mpiexternal-service-errors",children:"MPI/External Service Errors"}),"\n",(0,t.jsxs)(n.p,{children:["Enable mocking in vets-api ",(0,t.jsx)(n.code,{children:"config/settings.local.yml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"mpi:\n  mock: true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"switching-environments",children:"Switching Environments"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Local development\nyarn env:local\n\n# Staging (default)\nyarn env:staging  \n\n# Production\nyarn env:production\n"})}),"\n",(0,t.jsx)(n.p,{children:"After switching, rebuild native code if it was previously built for a different environment."}),"\n",(0,t.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/products/identity/Products/Mocked%20Authentication/readme.md",children:"Mocked Authentication Guide"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/department-of-veterans-affairs/vets-api-mockdata",children:"vets-api-mockdata"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/department-of-veterans-affairs/va.gov-team/tree/master/products/identity/Products/Sign-In%20Service",children:"Sign-In Service"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,t.jsx)(n.h3,{id:"modified-files",children:"Modified Files"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"env/env.sh"})," - Added local environment support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"package.json"})," - Added ",(0,t.jsx)(n.code,{children:"env:local"})," and ",(0,t.jsx)(n.code,{children:"start:local"})," scripts"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Native Code:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ios/RNAuthSession.swift"})," - Auto-detects local URLs and adds OAuth parameters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"android/.../CustomTabsIntentModule.kt"})," - Auto-detects local URLs and adds OAuth parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The native modules handle all OAuth parameter differences between local and remote environments automatically - no manual configuration needed."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(96540);const t={},l=s.createContext(t);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);