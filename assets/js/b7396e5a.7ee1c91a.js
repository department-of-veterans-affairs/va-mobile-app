"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3843],{9540:(e,n,t)=>{t.d(n,{d:()=>s});var r=t(72077);const s=e=>(0,r.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((n=>n.displayName===e))},64555:(e,n,t)=>{t.d(n,{A:()=>c});t(96540);var r=t(58069),s=t(65537),o=t(79329),i=t(9540),a=t(84476),l=t(74848);const d=({props:e})=>e?(0,l.jsx)(l.Fragment,{children:a.Ay.isEmpty(e)?(0,l.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Name"}),(0,l.jsx)("th",{children:"Type"}),(0,l.jsx)("th",{children:"Default Value"}),(0,l.jsx)("th",{children:"Required"}),(0,l.jsx)("th",{children:"Description"})]})}),(0,l.jsx)("tbody",{children:Object.keys(e).map((n=>(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:n})}),(0,l.jsx)("td",{style:{minWidth:200},children:e[n].type?.name}),(0,l.jsx)("td",{children:e[n].defaultValue&&e[n].defaultValue.value.toString()}),(0,l.jsx)("td",{children:e[n].required?"Yes":"No"}),(0,l.jsx)("td",{children:e[n].description})]},n)))})]})}):null;function c(e){const n=(0,i.d)(e.componentName),{description:t,displayName:a,props:c}=n[0],p=`How to use the ${a} component`,x=`Full code for the ${a} component`;return(0,l.jsxs)(l.Fragment,{children:[t,(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsxs)(s.A,{children:[(0,l.jsx)(o.A,{value:"props",label:"Properties",children:(0,l.jsx)(d,{props:c})}),(0,l.jsx)(o.A,{value:"example",label:"Example",children:e.example&&(0,l.jsx)(r.A,{title:p,className:"language-tsx test",children:e.example})}),(0,l.jsx)(o.A,{value:"code",label:"Source Code",children:e.codeString&&(0,l.jsx)(r.A,{title:x,className:"language-tsx",children:e.codeString})}),(0,l.jsx)(o.A,{value:"accessibility",label:"Accessibility",children:(0,l.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}},82140:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>m,exampleString:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>x});const r=JSON.parse('{"id":"Flagship design library/Components/TextViews/TextArea","title":"TextArea","description":"","source":"@site/docs/Flagship design library/Components/TextViews/TextArea.mdx","sourceDirName":"Flagship design library/Components/TextViews","slug":"/Flagship design library/Components/TextViews/TextArea","permalink":"/va-mobile-app/docs/Flagship design library/Components/TextViews/TextArea","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Text views","permalink":"/va-mobile-app/docs/Flagship design library/Components/TextViews/"},"next":{"title":"TextLineWithIcon","permalink":"/va-mobile-app/docs/Flagship design library/Components/TextViews/TextLineWithIcon"}}');var s=t(74848),o=t(28453);t(58069);const i="import React, { FC } from 'react'\nimport { TouchableWithoutFeedback } from 'react-native'\n\nimport { useTheme } from 'utils/hooks'\n\nimport Box, { BoxProps } from './Box'\n\n/**\n *  Signifies the props that need to be passed in to {@link TextArea}\n */\nexport type TextAreaProps = {\n  /** onPress callback */\n  onPress?: () => void\n  /** prop to remove border */\n  noBorder?: boolean\n  /** optional testID */\n  testID?: string\n}\n\n/**\n * Text area block for content\n *\n * @returns TextView component\n */\nconst TextArea: FC<TextAreaProps> = ({ onPress, noBorder, children, testID }) => {\n  const theme = useTheme()\n\n  const borderProps: BoxProps = noBorder\n    ? {}\n    : {\n        borderStyle: 'solid',\n        borderBottomWidth: 'default',\n        borderBottomColor: 'primary',\n        borderTopWidth: 'default',\n        borderTopColor: 'primary',\n      }\n\n  const boxProps: BoxProps = {\n    backgroundColor: 'contentBox',\n    p: theme.dimensions.cardPadding,\n  }\n\n  const _onPress = (): void => {\n    if (onPress) {\n      onPress()\n    }\n  }\n\n  if (onPress) {\n    return (\n      <TouchableWithoutFeedback accessibilityRole=\"button\" onPress={_onPress}>\n        <Box {...boxProps}>{children}</Box>\n      </TouchableWithoutFeedback>\n    )\n  }\n\n  return (\n    <Box {...boxProps} {...borderProps} testID={testID}>\n      {children}\n    </Box>\n  )\n}\n\nexport default TextArea\n";var a=t(64555);const l={},d=void 0,c={},p="<TextArea>\n    <Button \n    onPress={resetInAppReview} \n    label={'Reset In-App Review Actions'}  />\n</TextArea>",x=[];function h(e){return(0,s.jsx)(a.A,{componentName:"TextArea",example:p,codeString:i})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h()}}}]);