"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7739],{9540:(e,n,t)=>{t.d(n,{d:()=>r});var i=t(72077);const r=e=>(0,i.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((n=>n.displayName===e))},64555:(e,n,t)=>{t.d(n,{A:()=>p});t(96540);var i=t(58069),r=t(65537),s=t(79329),o=t(9540),a=t(84476),l=t(74848);const d=({props:e})=>e?(0,l.jsx)(l.Fragment,{children:a.Ay.isEmpty(e)?(0,l.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Name"}),(0,l.jsx)("th",{children:"Type"}),(0,l.jsx)("th",{children:"Default Value"}),(0,l.jsx)("th",{children:"Required"}),(0,l.jsx)("th",{children:"Description"})]})}),(0,l.jsx)("tbody",{children:Object.keys(e).map((n=>(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:n})}),(0,l.jsx)("td",{style:{minWidth:200},children:e[n].type?.name}),(0,l.jsx)("td",{children:e[n].defaultValue&&e[n].defaultValue.value.toString()}),(0,l.jsx)("td",{children:e[n].required?"Yes":"No"}),(0,l.jsx)("td",{children:e[n].description})]},n)))})]})}):null;function p(e){const n=(0,o.d)(e.componentName),{description:t,displayName:a,props:p}=n[0],c=`How to use the ${a} component`,u=`Full code for the ${a} component`;return(0,l.jsxs)(l.Fragment,{children:[t,(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsxs)(r.A,{children:[(0,l.jsx)(s.A,{value:"props",label:"Properties",children:(0,l.jsx)(d,{props:p})}),(0,l.jsx)(s.A,{value:"example",label:"Example",children:e.example&&(0,l.jsx)(i.A,{title:c,className:"language-tsx test",children:e.example})}),(0,l.jsx)(s.A,{value:"code",label:"Source Code",children:e.codeString&&(0,l.jsx)(i.A,{title:u,className:"language-tsx",children:e.codeString})}),(0,l.jsx)(s.A,{value:"accessibility",label:"Accessibility",children:(0,l.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}},91042:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>x,exampleString:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"Flagship design library/Components/Uncategorized/AppVersionAndBuild","title":"AppVersionAndBuild","description":"","source":"@site/docs/Flagship design library/Components/Uncategorized/AppVersionAndBuild.mdx","sourceDirName":"Flagship design library/Components/Uncategorized","slug":"/Flagship design library/Components/Uncategorized/AppVersionAndBuild","permalink":"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/AppVersionAndBuild","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Uncategorized","permalink":"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/"},"next":{"title":"NotificationManager","permalink":"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/NotificationManager"}}');var r=t(74848),s=t(28453);t(58069);const o="import React, { FC, useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { useAppVersion } from 'api/device/getAppVersion'\nimport { Box, TextView } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { VATextColors, VATypographyThemeVariants } from 'styles/theme'\nimport { getBuildNumber } from 'utils/deviceData'\nimport { useTheme } from 'utils/hooks'\n\nexport type AppVersionAndBuildProps = {\n  /** color of the text */\n  textColor?: keyof VATextColors\n  /** font weight of the text */\n  textWeight?: keyof VATypographyThemeVariants\n}\n\n/**\n * Common component to display the apps version and build number\n */\nconst AppVersionAndBuild: FC<AppVersionAndBuildProps> = ({ textColor = 'bodyText', textWeight = 'MobileBody' }) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n  const [buildNumber, setBuildNumber] = useState<number>()\n  const appVersionQuery = useAppVersion()\n\n  useEffect(() => {\n    async function getVersionAndBuild() {\n      const build = await getBuildNumber()\n      setBuildNumber(build)\n    }\n\n    getVersionAndBuild()\n  }, [])\n\n  return (\n    <Box mb={theme.dimensions.contentMarginBottom} justifyContent={'center'} alignItems={'center'}>\n      <TextView testID=\"AppVersionTestID\" variant={textWeight} flexDirection=\"row\" color={textColor}>\n        {t('versionAndBuild', { versionName: appVersionQuery.data, buildNumber })}\n      </TextView>\n    </Box>\n  )\n}\n\nexport default AppVersionAndBuild\n";var a=t(64555);const l={},d=void 0,p={},c="<AppVersionAndBuild textColor={'primaryContrast'} />",u=[];function m(e){return(0,r.jsx)(a.A,{componentName:"AppVersionAndBuild",example:c,codeString:o})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m()}}}]);