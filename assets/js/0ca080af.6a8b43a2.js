"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5106],{9540:(e,n,t)=>{t.d(n,{d:()=>o});var s=t(72077);const o=e=>(0,s.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((n=>n.displayName===e))},64555:(e,n,t)=>{t.d(n,{A:()=>p});t(96540);var s=t(58069),o=t(65537),i=t(79329),r=t(9540),l=t(84476),a=t(74848);const c=({props:e})=>e?(0,a.jsx)(a.Fragment,{children:l.Ay.isEmpty(e)?(0,a.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"Name"}),(0,a.jsx)("th",{children:"Type"}),(0,a.jsx)("th",{children:"Default Value"}),(0,a.jsx)("th",{children:"Required"}),(0,a.jsx)("th",{children:"Description"})]})}),(0,a.jsx)("tbody",{children:Object.keys(e).map((n=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:n})}),(0,a.jsx)("td",{style:{minWidth:200},children:e[n].type?.name}),(0,a.jsx)("td",{children:e[n].defaultValue&&e[n].defaultValue.value.toString()}),(0,a.jsx)("td",{children:e[n].required?"Yes":"No"}),(0,a.jsx)("td",{children:e[n].description})]},n)))})]})}):null;function p(e){const n=(0,r.d)(e.componentName),{description:t,displayName:l,props:p}=n[0],d=`How to use the ${l} component`,h=`Full code for the ${l} component`;return(0,a.jsxs)(a.Fragment,{children:[t,(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsxs)(o.A,{children:[(0,a.jsx)(i.A,{value:"props",label:"Properties",children:(0,a.jsx)(c,{props:p})}),(0,a.jsx)(i.A,{value:"example",label:"Example",children:e.example&&(0,a.jsx)(s.A,{title:d,className:"language-tsx test",children:e.example})}),(0,a.jsx)(i.A,{value:"code",label:"Source Code",children:e.codeString&&(0,a.jsx)(s.A,{title:h,className:"language-tsx",children:e.codeString})}),(0,a.jsx)(i.A,{value:"accessibility",label:"Accessibility",children:(0,a.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}},88141:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>u,exampleString:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"Flagship design library/Components/Selection and Input/Form Elements/Switch","title":"Switch","description":"","source":"@site/docs/Flagship design library/Components/Selection and Input/Form Elements/Switch.mdx","sourceDirName":"Flagship design library/Components/Selection and Input/Form Elements","slug":"/Flagship design library/Components/Selection and Input/Form Elements/Switch","permalink":"/va-mobile-app/docs/Flagship design library/Components/Selection and Input/Form Elements/Switch","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"RadioGroup","permalink":"/va-mobile-app/docs/Flagship design library/Components/Selection and Input/Form Elements/RadioGroup"},"next":{"title":"VASelector","permalink":"/va-mobile-app/docs/Flagship design library/Components/Selection and Input/Form Elements/VASelector"}}');var o=t(74848),i=t(28453);t(58069);const r="import React, { FC } from 'react'\nimport { AccessibilityProps, Switch as RNSwitch } from 'react-native'\n\nimport styled from 'styled-components'\n\nimport { a11yHintProp } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\n\nconst StyledRNSwitch = styled(RNSwitch)`\n  shadow-opacity: 0.3;\n  shadow-radius: 1px;\n  shadow-offset: 0px 0.5px;\n  min-width: 51px;\n`\n/**\n * Signifies props passed into {@link Switch}\n */\nexport type SwitchProps = AccessibilityProps & {\n  /** callback called on value change of the switch */\n  onPress: (value: boolean) => void\n  /** optional value of switch, updated with onPress */\n  on?: boolean\n  /** optional testID of switch */\n  testID?: string\n  /** optional accessibilityHint */\n  a11yHint?: string\n}\n\n/**A common component for the react native switch component*/\nconst Switch: FC<SwitchProps> = (props) => {\n  const { onPress, on, testID, a11yHint } = props\n  const theme = useTheme()\n  return (\n    <StyledRNSwitch\n      trackColor={{ false: theme.colors.control.switchOffTrack, true: theme.colors.control.switchOnTrack }}\n      thumbColor={theme.colors.control.switchOnThumb}\n      onValueChange={onPress}\n      value={!!on}\n      testID={testID}\n      {...a11yHintProp(a11yHint || '')}\n    />\n  )\n}\n\nexport default Switch\n";var l=t(64555);const a={},c=void 0,p={},d="<Switch onPress={() => { console.log('update on press') }} on={false} />",h=[];function m(e){return(0,o.jsx)(l.A,{componentName:"Switch",example:d,codeString:r})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m()}}}]);