"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6349],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(96540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}},63060:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"QA/QualityAssuranceProcess/ClosingBugTickets","title":"Closing bug tickets","description":"Why not just write up all bugs and keep those issues around forever?","source":"@site/docs/QA/QualityAssuranceProcess/ClosingBugTickets.md","sourceDirName":"QA/QualityAssuranceProcess","slug":"/QA/QualityAssuranceProcess/ClosingBugTickets","permalink":"/va-mobile-app/docs/QA/QualityAssuranceProcess/ClosingBugTickets","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Detox Best Practices","permalink":"/va-mobile-app/docs/QA/QualityAssuranceProcess/Automation/Detox Best Practices"},"next":{"title":"Compatibility and Support","permalink":"/va-mobile-app/docs/QA/QualityAssuranceProcess/Compatibility"}}');var s=n(74848),o=n(28453);const a={},r="Closing bug tickets",l={},c=[{value:"Why not just write up all bugs and keep those issues around forever?",id:"why-not-just-write-up-all-bugs-and-keep-those-issues-around-forever",level:2},{value:"When to close as not fixing",id:"when-to-close-as-not-fixing",level:3},{value:"Process",id:"process",level:3}];function u(e){const t={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"closing-bug-tickets",children:"Closing bug tickets"})}),"\n",(0,s.jsx)(t.h2,{id:"why-not-just-write-up-all-bugs-and-keep-those-issues-around-forever",children:"Why not just write up all bugs and keep those issues around forever?"}),"\n",(0,s.jsx)(t.p,{children:"To deliver a meaningful, high-quality app to veterans, teams must devote some portion of their time to fixing bugs to improve the user experience. However, even on teams that are dedicating a reasonable portion of time towards those improvements, it's easy for a backlog of bug tickets to get bloated to the point where it's unmanageable (requires too much cognitive load to understand & prioritize)."}),"\n",(0,s.jsx)(t.p,{children:"In addition to spending 30% of our time on maintenance (bug fixes, code upkeep, and the like), a clear set of definitions for bug tickets that we will close as 'not fixing' will help keep the backlog of bug tickets to a manageable, meaningful set."}),"\n",(0,s.jsx)(t.h3,{id:"when-to-close-as-not-fixing",children:"When to close as not fixing"}),"\n",(0,s.jsx)(t.p,{children:"Bug tickets that should be closed without fixing include:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Any bug in an external system, where the mobile app team cannot / will not be responsible for fixing it","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"For high-severity bugs, ideally when closing they will include information about how the issue was communicated to the responsible external team"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.li,{children:"Bugs that are no longer relevant/no longer apply (for example, a visual issue with the UI of a screen, but the screen has since been redesigned to remove the previously-wrong element)"}),"\n",(0,s.jsx)(t.li,{children:"Bugs that are prohibitively 'expensive'/risky to fix (decision made in conjunction with the relevant FE team)"}),"\n",(0,s.jsx)(t.li,{children:"Low-severity bugs which have been reported from production, and we are unable to reproduce in staging"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"process",children:"Process"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'Anyone can close a bug ticket as "not fixing" by closing the issue, adding a comment with explanation, and applying the "Closed - Can\'t / Won\'t Fix" label.'}),"\n",(0,s.jsx)(t.li,{children:'Anyone can open a previously "not fixing" bug ticket by re-opening it, adding a comment with explanation, and contacting the owning subteam about it.'}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);