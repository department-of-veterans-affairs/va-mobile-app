"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5619],{9540:(e,n,t)=>{t.d(n,{d:()=>o});var r=t(72077);const o=e=>(0,r.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((n=>n.displayName===e))},29959:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>m,default:()=>h,exampleString:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"Flagship design library/Components/Errors/DowntimeError","title":"DowntimeError","description":"","source":"@site/docs/Flagship design library/Components/Errors/DowntimeError.mdx","sourceDirName":"Flagship design library/Components/Errors","slug":"/Flagship design library/Components/Errors/DowntimeError","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/DowntimeError","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CallHelpCenter","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/CallHelpCenter"},"next":{"title":"ErrorComponent","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/ErrorComponent"}}');var o=t(74848),i=t(28453);t(58069);const s="import React, { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ViewStyle } from 'react-native'\nimport { useSelector } from 'react-redux'\n\nimport { AlertWithHaptics, Box, ClickToCallPhoneNumber, TextView, VAScrollView } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { RootState } from 'store'\nimport { DowntimeFeatureType, ScreenIDToDowntimeFeatures, ScreenIDTypes } from 'store/api/types'\nimport { DowntimeWindow, ErrorsState } from 'store/slices'\nimport { a11yLabelID } from 'utils/a11yLabel'\nimport { displayedTextPhoneNumber } from 'utils/formattingUtils'\nimport { featureInDowntime, useTheme } from 'utils/hooks'\n\nexport type DowntimeErrorProps = {\n  /**The screen id for the screen that has the errors*/\n  screenID: ScreenIDTypes\n}\n\n/**Common component to show an alert when the service is down*/\nconst DowntimeError: FC<DowntimeErrorProps> = ({ screenID }) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n\n  const scrollStyles: ViewStyle = {\n    justifyContent: 'center',\n  }\n\n  const containerStyles = {\n    mt: theme.dimensions.contentMarginTop,\n    mb: theme.dimensions.contentMarginBottom,\n  }\n  const { downtimeWindowsByFeature } = useSelector<RootState, ErrorsState>((state) => state.errors)\n  const features = ScreenIDToDowntimeFeatures[screenID]\n  // if there are multiple active downtime windows for the screen, use the latest endTime\n  let latestDowntimeWindow: DowntimeWindow | null = null\n  features.forEach((feature) => {\n    if (featureInDowntime(feature as DowntimeFeatureType, downtimeWindowsByFeature)) {\n      const downtimeWindow = downtimeWindowsByFeature[feature as DowntimeFeatureType]\n      if (downtimeWindow && (latestDowntimeWindow === null || latestDowntimeWindow.endTime < downtimeWindow.endTime)) {\n        latestDowntimeWindow = downtimeWindow\n      }\n    }\n  })\n\n  const endTime = latestDowntimeWindow\n    ? (latestDowntimeWindow as DowntimeWindow).endTime.toFormat(\"DDD 'at' t ZZZZ\")\n    : ''\n\n  return (\n    <VAScrollView contentContainerStyle={scrollStyles}>\n      <Box justifyContent=\"center\" {...containerStyles}>\n        <AlertWithHaptics\n          variant=\"warning\"\n          header={t('downtime.title')}\n          description={t('downtime.message.1', { endTime })}\n          descriptionA11yLabel={t('downtime.message.1.a11yLabel', { endTime })}>\n          {/*eslint-disable-next-line react-native-a11y/has-accessibility-hint*/}\n          <TextView accessibilityLabel={t('downtime.message.2.a11yLabel')} my={theme.dimensions.contentMarginTop}>\n            {t('downtime.message.2')}\n          </TextView>\n          <ClickToCallPhoneNumber\n            displayedText={displayedTextPhoneNumber(t('8006982411'))}\n            phone={t('8006982411')}\n            a11yLabel={a11yLabelID(t('8006982411'))}\n            variant={'base'}\n          />\n        </AlertWithHaptics>\n      </Box>\n    </VAScrollView>\n  )\n}\n\nexport default DowntimeError\n";var a=t(64555);const l={},m=void 0,c={},d="<DowntimeError screenID={screenID} />",p=[];function u(e){return(0,o.jsx)(a.A,{componentName:"DowntimeError",example:d,codeString:s})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u()}},64555:(e,n,t)=>{t.d(n,{A:()=>c});t(96540);var r=t(58069),o=t(65537),i=t(79329),s=t(9540),a=t(84476),l=t(74848);const m=e=>{let{props:n}=e;return n?(0,l.jsx)(l.Fragment,{children:a.Ay.isEmpty(n)?(0,l.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Name"}),(0,l.jsx)("th",{children:"Type"}),(0,l.jsx)("th",{children:"Default Value"}),(0,l.jsx)("th",{children:"Required"}),(0,l.jsx)("th",{children:"Description"})]})}),(0,l.jsx)("tbody",{children:Object.keys(n).map((e=>(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:e})}),(0,l.jsx)("td",{style:{minWidth:200},children:n[e].type?.name}),(0,l.jsx)("td",{children:n[e].defaultValue&&n[e].defaultValue.value.toString()}),(0,l.jsx)("td",{children:n[e].required?"Yes":"No"}),(0,l.jsx)("td",{children:n[e].description})]},e)))})]})}):null};function c(e){const n=(0,s.d)(e.componentName),{description:t,displayName:a,props:c}=n[0],d=`How to use the ${a} component`,p=`Full code for the ${a} component`;return(0,l.jsxs)(l.Fragment,{children:[t,(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsxs)(o.A,{children:[(0,l.jsx)(i.A,{value:"props",label:"Properties",children:(0,l.jsx)(m,{props:c})}),(0,l.jsx)(i.A,{value:"example",label:"Example",children:e.example&&(0,l.jsx)(r.A,{title:d,className:"language-tsx test",children:e.example})}),(0,l.jsx)(i.A,{value:"code",label:"Source Code",children:e.codeString&&(0,l.jsx)(r.A,{title:p,className:"language-tsx",children:e.codeString})}),(0,l.jsx)(i.A,{value:"accessibility",label:"Accessibility",children:(0,l.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}}}]);