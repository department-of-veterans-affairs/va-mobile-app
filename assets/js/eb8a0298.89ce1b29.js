"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1622],{9540:(e,n,t)=>{t.d(n,{d:()=>l});var r=t(72077);const l=e=>(0,r.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((n=>n.displayName===e))},13185:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>y,exampleString:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"Flagship design library/Components/Errors/CallHelpCenter","title":"CallHelpCenter","description":"","source":"@site/docs/Flagship design library/Components/Errors/CallHelpCenter.mdx","sourceDirName":"Flagship design library/Components/Errors","slug":"/Flagship design library/Components/Errors/CallHelpCenter","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/CallHelpCenter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"BasicError","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/BasicError"},"next":{"title":"DowntimeError","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/DowntimeError"}}');var l=t(74848),i=t(28453);t(58069);const o="import React, { FC } from 'react'\nimport { useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ViewStyle } from 'react-native'\n\nimport { AlertWithHaptics, Box, ClickToCallPhoneNumber, TextView, VAScrollView } from 'components'\nimport { Events } from 'constants/analytics'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { a11yLabelID, a11yLabelVA } from 'utils/a11yLabel'\nimport { logAnalyticsEvent } from 'utils/analytics'\nimport { displayedTextPhoneNumber } from 'utils/formattingUtils'\nimport { useTheme } from 'utils/hooks'\n\nexport type CallHelpCenterProps = {\n  /** optional function called when the Try again button is pressed */\n  onTryAgain?: () => void\n  /** optional text for the title */\n  titleText?: string\n  /** optional title a11y hint*/\n  titleA11yHint?: string\n  /** optional text for the error */\n  errorText?: string\n  /** optional a11y hint for the error */\n  errorA11y?: string\n  /** optional phone number */\n  callPhone?: string\n}\n\n/**A common component to show the help center contact info for when an error happens*/\nconst CallHelpCenter: FC<CallHelpCenterProps> = ({\n  onTryAgain,\n  titleText,\n  titleA11yHint,\n  errorText,\n  errorA11y,\n  callPhone,\n}) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n\n  const scrollStyles: ViewStyle = {\n    justifyContent: 'center',\n  }\n\n  const containerStyles = {\n    mt: theme.dimensions.contentMarginTop,\n    mb: theme.dimensions.contentMarginBottom,\n  }\n  useEffect(() => {\n    logAnalyticsEvent(Events.vama_fail())\n  }, [])\n\n  const tryAgain = () => {\n    logAnalyticsEvent(Events.vama_fail_refresh())\n    if (onTryAgain) {\n      onTryAgain()\n    }\n  }\n\n  return (\n    <VAScrollView contentContainerStyle={scrollStyles}>\n      <Box justifyContent=\"center\" {...containerStyles}>\n        <AlertWithHaptics\n          variant=\"error\"\n          header={titleText ? titleText : t('errors.callHelpCenter.vaAppNotWorking')}\n          headerA11yLabel={titleA11yHint ? titleA11yHint : a11yLabelVA(t('errors.callHelpCenter.vaAppNotWorking'))}\n          description={onTryAgain ? t('errors.callHelpCenter.sorryWithRefresh') : t('errors.callHelpCenter.sorry')}\n          primaryButton={onTryAgain && { label: t('refresh'), onPress: tryAgain, testID: t('refresh') }}>\n          <Box>\n            {/*eslint-disable-next-line react-native-a11y/has-accessibility-hint*/}\n            <TextView\n              variant=\"MobileBody\"\n              paragraphSpacing={true}\n              accessibilityLabel={errorA11y ? errorA11y : t('errors.callHelpCenter.informationLine.a11yLabel')}>\n              {errorText ? errorText : t('errors.callHelpCenter.informationLine')}\n            </TextView>\n            <ClickToCallPhoneNumber\n              a11yLabel={a11yLabelID(callPhone || t('8006982411'))}\n              displayedText={callPhone ? undefined : displayedTextPhoneNumber(t('8006982411'))}\n              phone={callPhone ? callPhone : t('8006982411')}\n              variant={'base'}\n            />\n          </Box>\n        </AlertWithHaptics>\n      </Box>\n    </VAScrollView>\n  )\n}\n\nexport default CallHelpCenter\n";var a=t(64555);const s={},c=void 0,p={},d="<CallHelpCenter\n    titleText={t('profile:disabilityRating.errorTitle')}\n    titleA11yHint={t('profile:disabilityRating.errorTitleA11y')}\n    callPhone={t('profile:disabilityRating.errorPhoneNumber')}\n/>",m=[];function h(e){return(0,l.jsx)(a.A,{componentName:"CallHelpCenter",example:d,codeString:o})}function y(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h()}},64555:(e,n,t)=>{t.d(n,{A:()=>p});t(96540);var r=t(58069),l=t(65537),i=t(79329),o=t(9540),a=t(84476),s=t(74848);const c=({props:e})=>e?(0,s.jsx)(s.Fragment,{children:a.Ay.isEmpty(e)?(0,s.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Name"}),(0,s.jsx)("th",{children:"Type"}),(0,s.jsx)("th",{children:"Default Value"}),(0,s.jsx)("th",{children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsx)("tbody",{children:Object.keys(e).map((n=>(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)("code",{children:n})}),(0,s.jsx)("td",{style:{minWidth:200},children:e[n].type?.name}),(0,s.jsx)("td",{children:e[n].defaultValue&&e[n].defaultValue.value.toString()}),(0,s.jsx)("td",{children:e[n].required?"Yes":"No"}),(0,s.jsx)("td",{children:e[n].description})]},n)))})]})}):null;function p(e){const n=(0,o.d)(e.componentName),{description:t,displayName:a,props:p}=n[0],d=`How to use the ${a} component`,m=`Full code for the ${a} component`;return(0,s.jsxs)(s.Fragment,{children:[t,(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),(0,s.jsxs)(l.A,{children:[(0,s.jsx)(i.A,{value:"props",label:"Properties",children:(0,s.jsx)(c,{props:p})}),(0,s.jsx)(i.A,{value:"example",label:"Example",children:e.example&&(0,s.jsx)(r.A,{title:d,className:"language-tsx test",children:e.example})}),(0,s.jsx)(i.A,{value:"code",label:"Source Code",children:e.codeString&&(0,s.jsx)(r.A,{title:m,className:"language-tsx",children:e.codeString})}),(0,s.jsx)(i.A,{value:"accessibility",label:"Accessibility",children:(0,s.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}}}]);