"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1389],{9540:(e,t,n)=>{n.d(t,{d:()=>s});var i=n(72077);const s=e=>(0,i.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},45425:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,exampleString:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"Flagship design library/Components/Layout and Organization/List/List","title":"List","description":"","source":"@site/docs/Flagship design library/Components/Layout and Organization/List/List.mdx","sourceDirName":"Flagship design library/Components/Layout and Organization/List","slug":"/Flagship design library/Components/Layout and Organization/List/","permalink":"/va-mobile-app/docs/Flagship design library/Components/Layout and Organization/List/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LargeNavButton","permalink":"/va-mobile-app/docs/Flagship design library/Components/Layout and Organization/LargeNavButton"},"next":{"title":"BaseListItem","permalink":"/va-mobile-app/docs/Flagship design library/Components/Layout and Organization/List/BaseListItem"}}');var s=n(74848),o=n(28453);n(58069);const r="import React, { FC } from 'react'\n\nimport { useTheme } from 'utils/hooks'\n\nimport BaseListItem, { BaseListItemProps } from './BaseListItem'\nimport Box from './Box'\nimport { SwitchProps } from './Switch'\nimport { TextViewProps } from './TextView'\nimport { TextView } from './index'\n\n/**\n * Signifies each item in the list of items in {@link ListProps}\n */\nexport type ListItemObj = {\n  /** optional text to use as the button's accessibility hint */\n  a11yHintText?: string\n\n  /** display content for the item */\n  content?: React.ReactNode\n\n  /** on press event */\n  onPress?: () => void\n\n  /** request file number for file indicator */\n  requestNumber?: number\n\n  /** request file if file was loaded */\n  fileUploaded?: boolean\n} & Partial<BaseListItemProps>\n\n/**\n * Props for {@link List}\n */\nexport type ListProps = {\n  /** list of items of which a button will be rendered per item */\n  items: Array<ListItemObj>\n\n  /** optional title to use for the list */\n  title?: string\n\n  /**optional a11y hint for the title */\n  titleA11yLabel?: string\n\n  /** optional text on the right on same row of title */\n  rightTitleText?: string\n\n  /** optional a11y hint for the rightTitleText */\n  rightTitleTextA11yLabel?: string\n}\n\n/**\n * A common component for showing a list of <ListItem>.\n */\nconst List: FC<ListProps> = ({ items, title, titleA11yLabel, rightTitleText, rightTitleTextA11yLabel }) => {\n  const theme = useTheme()\n  const { gutter, condensedMarginBetween, standardMarginBetween } = theme.dimensions\n\n  const titleProps: TextViewProps = {\n    variant: 'TableHeaderBold',\n    mx: gutter,\n    mb: condensedMarginBetween,\n    mt: standardMarginBetween,\n    accessibilityRole: 'header',\n  }\n\n  const buttons = items.map((item, index) => {\n    const { content, a11yHintText, decoratorProps } = item\n    const dProps = decoratorProps as Partial<SwitchProps>\n\n    return (\n      <BaseListItem key={index} a11yHint={a11yHintText || dProps?.a11yHint || ''} {...item}>\n        {content}\n      </BaseListItem>\n    )\n  })\n\n  return (\n    <Box>\n      <Box flexDirection=\"row\" justifyContent={'space-between'} accessible={true}>\n        {title && (\n          // eslint-disable-next-line react-native-a11y/has-accessibility-hint\n          <TextView\n            {...titleProps}\n            accessibilityLabel={titleA11yLabel}\n            accessible={true}\n            testID={titleA11yLabel || title}>\n            {title}\n          </TextView>\n        )}\n        {rightTitleText && (\n          // eslint-disable-next-line react-native-a11y/has-accessibility-hint\n          <TextView\n            {...titleProps}\n            accessibilityLabel={rightTitleTextA11yLabel}\n            accessible={true}\n            testID={rightTitleTextA11yLabel || rightTitleText}>\n            {rightTitleText}\n          </TextView>\n        )}\n      </Box>\n      <Box borderTopWidth={theme.dimensions.borderWidth} borderStyle=\"solid\" borderColor=\"primary\">\n        <Box backgroundColor={'list'}>{buttons}</Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default List\n";var a=n(64555);const l={},c=void 0,d={},p="import { List, ListItemObj } from 'components'\n    const listExample: Array<ListItemObj> = [\n        { content: <TextView>'My Title 1'</TextView>, a11yHintText: 'Hint 1', onPress: () => { console.log('button 1 pressed') } },\n        { content: <TextView>'My Title 2'</TextView>, a11yHintText: 'Hint 2', onPress: () => { console.log('button 2 pressed') } },\n    ]\n\n<List items={listExample} />",m=[];function x(e){return(0,s.jsx)(a.A,{componentName:"List",example:p,codeString:r})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x()}},64555:(e,t,n)=>{n.d(t,{A:()=>d});n(96540);var i=n(58069),s=n(65537),o=n(79329),r=n(9540),a=n(84476),l=n(74848);const c=e=>{let{props:t}=e;return t?(0,l.jsx)(l.Fragment,{children:a.Ay.isEmpty(t)?(0,l.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Name"}),(0,l.jsx)("th",{children:"Type"}),(0,l.jsx)("th",{children:"Default Value"}),(0,l.jsx)("th",{children:"Required"}),(0,l.jsx)("th",{children:"Description"})]})}),(0,l.jsx)("tbody",{children:Object.keys(t).map((e=>(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:e})}),(0,l.jsx)("td",{style:{minWidth:200},children:t[e].type?.name}),(0,l.jsx)("td",{children:t[e].defaultValue&&t[e].defaultValue.value.toString()}),(0,l.jsx)("td",{children:t[e].required?"Yes":"No"}),(0,l.jsx)("td",{children:t[e].description})]},e)))})]})}):null};function d(e){const t=(0,r.d)(e.componentName),{description:n,displayName:a,props:d}=t[0],p=`How to use the ${a} component`,m=`Full code for the ${a} component`;return(0,l.jsxs)(l.Fragment,{children:[n,(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsxs)(s.A,{children:[(0,l.jsx)(o.A,{value:"props",label:"Properties",children:(0,l.jsx)(c,{props:d})}),(0,l.jsx)(o.A,{value:"example",label:"Example",children:e.example&&(0,l.jsx)(i.A,{title:p,className:"language-tsx test",children:e.example})}),(0,l.jsx)(o.A,{value:"code",label:"Source Code",children:e.codeString&&(0,l.jsx)(i.A,{title:m,className:"language-tsx",children:e.codeString})}),(0,l.jsx)(o.A,{value:"accessibility",label:"Accessibility",children:(0,l.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}}}]);