"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2336],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(96540);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},43545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"DevOps/AutomationCodeDocs/GitHubActions/UsingActWithActions","title":"Using Act with Github actions","description":"When using GitHub Actions, you may need to work against a PR to test your logic. This can be problematic and time consuming as a PR will need to be created or updated every time.","source":"@site/development/DevOps/AutomationCodeDocs/GitHubActions/UsingActWithActions.md","sourceDirName":"DevOps/AutomationCodeDocs/GitHubActions","slug":"/DevOps/AutomationCodeDocs/GitHubActions/UsingActWithActions","permalink":"/va-mobile-app/development/DevOps/AutomationCodeDocs/GitHubActions/UsingActWithActions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"sidebar_label":"Using act with actions"},"sidebar":"tutorialSidebar","previous":{"title":"Other workflows","permalink":"/va-mobile-app/development/DevOps/AutomationCodeDocs/GitHubActions/OtherWorkflows"},"next":{"title":"Release issues","permalink":"/va-mobile-app/development/DevOps/AutomationCodeDocs/GitHubActions/ReleaseIssues"}}');var o=n(74848),i=n(28453);const a={sidebar_position:7,sidebar_label:"Using act with actions"},r="Using Act with Github actions",c={},l=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"using-act-with-github-actions",children:"Using Act with Github actions"})}),"\n",(0,o.jsx)(t.p,{children:"When using GitHub Actions, you may need to work against a PR to test your logic. This can be problematic and time consuming as a PR will need to be created or updated every time."}),"\n",(0,o.jsxs)(t.p,{children:["You can use ",(0,o.jsx)(t.code,{children:"act"})," locally to work against a PR."]}),"\n",(0,o.jsx)(t.p,{children:"Run this command on macos to install:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash\n"})}),"\n",(0,o.jsxs)(t.p,{children:["You can use this basic template to create a pull_request to be able to test PR actions.\nAdd this file to the root of your repo and call it ",(0,o.jsx)(t.code,{children:"pull_request"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n  "action": "opened",\n  "pull_request": {\n    "head": {\n      "ref": "chore-branch-here",\n      "sha": "abcdef1234567890abcdef1234567890",\n      "repo": {\n        "full_name": "department-of-veterans-affairs/va-mobile-app"\n      }\n    },\n    "base": {\n      "ref": "main",\n      "sha": "fedcba9876543210fedcba9876543210",\n      "repo": {\n        "full_name": "department-of-veterans-affairs/va-mobile-app"\n      }\n    },\n    "number": 999,\n    "merged": false,\n    "state": "open",\n    "title": "Test PR for Workflow",\n    "body": "This is a test pull request for local testing.",\n    "user": {\n      "login": "test-user"\n    }\n  },\n  "repository": {\n    "full_name": "department-of-veterans-affairs/va-mobile-app"\n  }\n}\n'})}),"\n",(0,o.jsx)(t.p,{children:"From here you can modify the data that is being sent to satisfy your requirements. The most important pieces that can be updated:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:'"action": "opened",'})}),"\n",(0,o.jsx)(t.p,{children:"This is used for the pull request action"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:'"number": 999,'})}),"\n",(0,o.jsx)(t.p,{children:"This is the PR number"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:'"merged": false,'})}),"\n",(0,o.jsx)(t.p,{children:"This tells if the PR is set to merged or not."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:'"state": "open",'})}),"\n",(0,o.jsx)(t.p,{children:"This sets the state of the PR. open or closed"}),"\n",(0,o.jsx)(t.p,{children:"You can update these fields in your pr payload to trigger your GH action."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"act .git/workflows/<workflow> -e pull_request"})}),"\n",(0,o.jsx)(t.p,{children:"If you are not seeing the correct data from the log, you can add a -v to the end to see verbose logging"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"act .git/workflows/<workflow> -e pull_request -v"})}),"\n",(0,o.jsx)(t.p,{children:"You can also add linked issues if thats a requirement"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'...\n{\n"issue":,\n  "number": 1234,\n}\n'})}),"\n",(0,o.jsx)(t.p,{children:"You can also use a github token and send it as a secret if you need to call other github actions."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"export GH_TOKEN=438r9y432893w6bf432098\nact .git/workflows/<workflow> -e pull_request -s GH_TOKEN\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);