"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[705],{4208:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/chrome-debug-screen-0007275fbc695f77e87d6bfa6b5cd445.png"},13321:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/react-dev-tools-network-b641a4c87a984c2f9d07963f977a245f.png"},15561:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/android-debug-dialog-0b232400fca92aba85dfe96234776201.jpg"},22820:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/chrome-dev-tools-element-5405dc5c743c7a7817890b1b79161467.png"},27572:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/react-dev-tools-source-784275b853cb8b0f7ca096de61a09c67.png"},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var o=t(96540);const s={},i=o.createContext(s);function l(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(i.Provider,{value:n},e.children)}},28727:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/ios-debug-action-sheet-40fde13a7f681ed096be628dad4fef65.png"},38255:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/vscode-debugger-breakpoint-baeb8544624e79e49eeba2633eeca65a.png"},45585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"Engineering/FrontEnd/DebuggingToolsInstructions","title":"Debugging Tools","description":"This page shows the different debug tools that we use to debug the VAMobile app. You can use your prefer method.","source":"@site/docs/Engineering/FrontEnd/DebuggingToolsInstructions.md","sourceDirName":"Engineering/FrontEnd","slug":"/Engineering/FrontEnd/DebuggingToolsInstructions","permalink":"/va-mobile-app/docs/Engineering/FrontEnd/DebuggingToolsInstructions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Debugging Tools"},"sidebar":"tutorialSidebar","previous":{"title":"useValidateMessageWithSignature","permalink":"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useValidateMessageWithSignature"},"next":{"title":"Demo Mode","permalink":"/va-mobile-app/docs/Engineering/FrontEnd/DemoMode/"}}');var s=t(74848),i=t(28453);const l={title:"Debugging Tools"},d="Debugging Instructions",a={},r=[{value:"Launching The Debugger",id:"launching-the-debugger",level:2},{value:"IOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Debugging Tools",id:"debugging-tools",level:2},{value:"Chrome Developers Tools",id:"chrome-developers-tools",level:3},{value:"React Native Developer Tools (standalone application)",id:"react-native-developer-tools-standalone-application",level:3},{value:"VSCode React Native Tools Extension",id:"vscode-react-native-tools-extension",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"debugging-instructions",children:"Debugging Instructions"})}),"\n",(0,s.jsx)(n.p,{children:"This page shows the different debug tools that we use to debug the VAMobile app. You can use your prefer method."}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsxs)(n.p,{children:["For all the debugging tools you need to ",(0,s.jsx)(n.code,{children:"yarn start"})," the ",(0,s.jsx)(n.code,{children:"metro server"})," so that the debugger can  connect to it or it will not work."]})}),"\n",(0,s.jsx)(n.h2,{id:"launching-the-debugger",children:"Launching The Debugger"}),"\n",(0,s.jsxs)(n.p,{children:["This section will apply to all the tools. More information on the ",(0,s.jsx)(n.a,{href:"https://reactnative.dev/docs/debugging",children:"react native debugging page"})]}),"\n",(0,s.jsx)(n.h3,{id:"ios",children:"IOS"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["If on ",(0,s.jsx)(n.code,{children:"physical device Shake your device"}),". If using a ",(0,s.jsx)(n.code,{children:"simulator"})," press the shortcut  ",(0,s.jsx)(n.code,{children:"\u2318D"})," or by selecting the ",(0,s.jsx)(n.code,{children:"Shake Gesture"})," inside the hardware menu in the simulator."]}),"\n",(0,s.jsxs)(n.li,{children:["On the Action Sheet select ",(0,s.jsx)(n.code,{children:"Debug with Chrome"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"IOS Debug Menu",src:t(28727).A+"",width:"400",height:"866"})}),"\n",(0,s.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Ff on ",(0,s.jsx)(n.code,{children:"physical device Shake your device"}),". If using a ",(0,s.jsx)(n.code,{children:"emulator"})," press the shortcut  ",(0,s.jsx)(n.code,{children:"\u2318M"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["On the dialog select ",(0,s.jsx)(n.code,{children:"Debug"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Android Debug Menu",src:t(15561).A+"",width:"400",height:"822"})}),"\n",(0,s.jsx)(n.h2,{id:"debugging-tools",children:"Debugging Tools"}),"\n",(0,s.jsx)(n.p,{children:"This sections shows the different debugging tools you can use. By default the chrome developers tools will open if no other tool is already open."}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsx)(n.p,{children:"You must have only the tool you want to use open so that the debugger connects to it."})}),"\n",(0,s.jsx)(n.h3,{id:"chrome-developers-tools",children:"Chrome Developers Tools"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Launch the debugger from the device debug menu."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"React Native Debugger"})," page will open in Chrome on url ",(0,s.jsx)(n.code,{children:"http://localhost:8081/debugger-ui/"}),". You will know if the device is connected in the ",(0,s.jsx)(n.code,{children:"Status"})," section."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"React Native Debugger",src:t(4208).A+"",width:"1127",height:"418"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Open the developers tools. From the developers tools you can see the elements, console outputs and source files."}),"\n",(0,s.jsx)(n.p,{children:"In the element you can see the html tree."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Chrome Dev Tools Element",src:t(22820).A+"",width:"832",height:"328"})}),"\n",(0,s.jsx)(n.p,{children:"In the console you can see the redux logout messages and other console outputs."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Chrome Dev Tools Console",src:t(77691).A+"",width:"933",height:"657"})}),"\n",(0,s.jsx)(n.p,{children:"In the source under debuggerWorker you can find the javascript files that you can put breakpoints."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Chrome Dev Tools Source",src:t(61817).A+"",width:"841",height:"601"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"react-native-developer-tools-standalone-application",children:"React Native Developer Tools (standalone application)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If not installed yet follow the installation instructions in the ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/react/tree/main/packages/react-devtools",children:"react-devtools"})," to install the react dev tools globally on your machine not in the project. And than install ",(0,s.jsx)(n.a,{href:"https://github.com/jhen0409/react-native-debugger",children:"standalone react native debugger app"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If installed or after the installation launch the react native debugger standalone app."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Launch the debugger from your device."}),"\n",(0,s.jsx)(n.p,{children:"With the standalone you can see the redux messages with the redux devtools, see the element tree and console logs in the console tab."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"React Dev Tools",src:t(83716).A+"",width:"1544",height:"973"})}),"\n",(0,s.jsx)(n.p,{children:"In the source tab under RNDebuggerWorker you can find the javascripts to add breakpoints to."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"React Dev Tools Source",src:t(27572).A+"",width:"936",height:"685"})}),"\n",(0,s.jsx)(n.p,{children:"If you right click on the redux devtools section you will get a popup to enable network calls. This will allow you to see the calls and response done to the api."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"React Dev Tools Enable Network",src:t(99583).A+"",width:"1037",height:"545"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"React Dev Tools Network",src:t(13321).A+"",width:"973",height:"497"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"vscode-react-native-tools-extension",children:"VSCode React Native Tools Extension"}),"\n",(0,s.jsx)(n.p,{children:"This extension will allow you to add breakpoints on the actual code in VSCode."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If not installed install the React Native Tools extension in VSCode and follow the setup instructions in the extensions document."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"React Tools VSCode",src:t(69537).A+"",width:"761",height:"242"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"After the extension is installed launch the debugger. Select the Run and Debug Icon on the left explorer and click the play button on the Attach tp packager dropdown."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Launch Debugger",src:t(51619).A+"",width:"392",height:"242"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Launch the debugger from your device."}),"\n",(0,s.jsx)(n.p,{children:"The debugger should attach to the VSCode debugger and stop on any breakpoints"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"VSCode breakpoint",src:t(38255).A+"",width:"706",height:"487"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},51619:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/vscode-launch-debugger-3013c3378edccb8d9baf53de7dab6595.png"},61817:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/chrome-dev-tools-source-95b94d89b81aaa617ced3efbdfba6a48.png"},69537:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/vscode-react-tools-ext-d8a554f524ac4d4f0374288bf3170273.png"},77691:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/chrome-dev-tools-console-8f6d577a4436f7363affdf6ee9e5a8df.png"},83716:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/react-dev-tools-08c62e4174dbae25bb4cdd8713f8878e.png"},99583:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/react-dev-tools-enable-network-e91d27fcacbc09156418cbd59031a2e2.png"}}]);