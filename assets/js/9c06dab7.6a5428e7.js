"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2717],{9540:(r,n,e)=>{e.d(n,{d:()=>o});var t=e(72077);const o=r=>(0,t.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((n=>n.displayName===r))},22191:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>u,exampleString:()=>m,frontMatter:()=>l,metadata:()=>t,toc:()=>E});const t=JSON.parse('{"id":"Flagship design library/Components/Errors/ErrorComponent","title":"ErrorComponent","description":"","source":"@site/docs/Flagship design library/Components/Errors/ErrorComponent.mdx","sourceDirName":"Flagship design library/Components/Errors","slug":"/Flagship design library/Components/Errors/ErrorComponent","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/ErrorComponent","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"DowntimeError","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/DowntimeError"},"next":{"title":"NetworkConnectionError","permalink":"/va-mobile-app/docs/Flagship design library/Components/Errors/NetworkConnectionError"}}');var o=e(74848),s=e(28453);e(58069);const a="import React, { FC, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\n\nimport { CallHelpCenter, CustomError, DowntimeError, ErrorAlert, NetworkConnectionError } from 'components'\nimport { Events } from 'constants/analytics'\nimport { CommonErrorTypesConstants } from 'constants/errors'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { RootState } from 'store'\nimport { ScreenIDToDowntimeFeatures, ScreenIDTypes } from 'store/api/types'\nimport { ErrorsState } from 'store/slices'\nimport { logAnalyticsEvent } from 'utils/analytics'\nimport { isErrorObject } from 'utils/common'\nimport { getCommonErrorFromAPIError } from 'utils/errors'\nimport { displayedTextPhoneNumber } from 'utils/formattingUtils'\nimport { oneOfFeaturesInDowntime } from 'utils/hooks'\n\nexport type ErrorComponentProps = {\n  /**The screen id for the screen that has the errors*/\n  screenID: ScreenIDTypes\n  /** optional function called when the Try again button is pressed */\n  onTryAgain?: () => void\n  /** optional Error */\n  error?: Error | null\n}\n\n/**Main error handling component. This component will show the proper screen according to the type of error.*/\nconst ErrorComponent: FC<ErrorComponentProps> = (props) => {\n  const {\n    errorsByScreenID,\n    downtimeWindowsByFeature,\n    tryAgain: storeTryAgain,\n  } = useSelector<RootState, ErrorsState>((state) => state.errors)\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const features = ScreenIDToDowntimeFeatures[props.screenID]\n  const isInDowntime = oneOfFeaturesInDowntime(features, downtimeWindowsByFeature)\n  const [logDowntimeAnalytics, setLogDowntimeAnalytics] = useState(true)\n\n  const getSpecificErrorComponent: FC<ErrorComponentProps> = ({ onTryAgain, screenID, error }) => {\n    const tryAgain = onTryAgain ? onTryAgain : storeTryAgain\n    const errorType = errorsByScreenID[screenID] || ''\n\n    if (isInDowntime) {\n      if (logDowntimeAnalytics) {\n        features.forEach((feature) => {\n          const downtimeWindow = downtimeWindowsByFeature[feature]\n          if (downtimeWindow)\n            logAnalyticsEvent(Events.vama_mw_shown(feature, downtimeWindow.startTime, downtimeWindow?.endTime))\n        })\n        setLogDowntimeAnalytics(false)\n      }\n      return <DowntimeError screenID={screenID} />\n    }\n\n    if (error && isErrorObject(error)) {\n      let custom\n      const reactQueryErrorType = getCommonErrorFromAPIError(error, screenID)\n      switch (reactQueryErrorType) {\n        case CommonErrorTypesConstants.NETWORK_CONNECTION_ERROR:\n          return <NetworkConnectionError onTryAgain={tryAgain} />\n        case CommonErrorTypesConstants.APP_LEVEL_ERROR:\n          return <CallHelpCenter />\n        case CommonErrorTypesConstants.APP_LEVEL_ERROR_WITH_REFRESH:\n          return <CallHelpCenter onTryAgain={tryAgain} />\n        case CommonErrorTypesConstants.APP_LEVEL_ERROR_HEALTH_LOAD:\n          return (\n            <CallHelpCenter\n              onTryAgain={tryAgain}\n              errorText={t('secureMessaging.sendError.ifTheAppStill')}\n              errorA11y={t('secureMessaging.sendError.ifTheAppStill.a11y')}\n              callPhone={displayedTextPhoneNumber(t('8773270022'))}\n            />\n          )\n        case CommonErrorTypesConstants.APP_LEVEL_ERROR_DISABILITY_RATING:\n          return (\n            <CallHelpCenter\n              titleText={t('disabilityRating.errorTitle')}\n              callPhone={displayedTextPhoneNumber(t('8008271000'))}\n            />\n          )\n        case CommonErrorTypesConstants.APP_LEVEL_ERROR_APPOINTMENTS:\n          return <ErrorAlert text={t('appointments.errorText')} onTryAgain={tryAgain} />\n        case CommonErrorTypesConstants.APP_LEVEL_ERROR_VACCINE:\n          return (\n            <CallHelpCenter\n              onTryAgain={tryAgain}\n              titleText={t('errors.callHelpCenter.vaAppNotWorking')}\n              callPhone={displayedTextPhoneNumber(t('8006982411'))}\n            />\n          )\n        case CommonErrorTypesConstants.APP_LEVEL_ERROR_ALLERGY:\n          return (\n            <CallHelpCenter\n              onTryAgain={tryAgain}\n              titleText={t('errors.callHelpCenter.vaAppNotWorking')}\n              callPhone={displayedTextPhoneNumber(t('8006982411'))}\n            />\n          )\n        case CommonErrorTypesConstants.CUSTOM_ERROR:\n          custom = error.json?.errors[0]\n          return (\n            <CustomError titleText={custom?.title || ''} errorText={custom?.body || ''} callPhone={custom?.telephone} />\n          )\n        case CommonErrorTypesConstants.CUSTOM_ERROR_WITH_REFRESH:\n          custom = error.json?.errors[0]\n          return (\n            <CustomError\n              onTryAgain={tryAgain}\n              titleText={custom?.title || ''}\n              errorText={custom?.body || ''}\n              callPhone={custom?.telephone}\n            />\n          )\n        default:\n          return <CallHelpCenter onTryAgain={tryAgain} />\n      }\n    }\n    // check which specific error occurred and return the corresponding error element\n    switch (errorType) {\n      case CommonErrorTypesConstants.NETWORK_CONNECTION_ERROR:\n        return <NetworkConnectionError onTryAgain={tryAgain} />\n      case CommonErrorTypesConstants.APP_LEVEL_ERROR:\n        return <CallHelpCenter />\n      case CommonErrorTypesConstants.APP_LEVEL_ERROR_WITH_REFRESH:\n        return <CallHelpCenter onTryAgain={tryAgain} />\n      case CommonErrorTypesConstants.APP_LEVEL_ERROR_HEALTH_LOAD:\n        return (\n          <CallHelpCenter\n            onTryAgain={tryAgain}\n            errorText={t('secureMessaging.sendError.ifTheAppStill')}\n            errorA11y={t('secureMessaging.sendError.ifTheAppStill.a11y')}\n            callPhone={displayedTextPhoneNumber(t('8773270022'))}\n          />\n        )\n      case CommonErrorTypesConstants.APP_LEVEL_ERROR_DISABILITY_RATING:\n        return (\n          <CallHelpCenter\n            titleText={t('disabilityRating.errorTitle')}\n            callPhone={displayedTextPhoneNumber(t('8008271000'))}\n          />\n        )\n      case CommonErrorTypesConstants.APP_LEVEL_ERROR_APPOINTMENTS:\n        return <ErrorAlert text={t('appointments.errorText')} onTryAgain={tryAgain} />\n      case CommonErrorTypesConstants.APP_LEVEL_ERROR_VACCINE:\n        return (\n          <CallHelpCenter\n            onTryAgain={tryAgain}\n            titleText={t('errors.callHelpCenter.vaAppNotWorking')}\n            callPhone={displayedTextPhoneNumber(t('8006982411'))}\n          />\n        )\n      case CommonErrorTypesConstants.APP_LEVEL_ERROR_ALLERGY:\n        return (\n          <CallHelpCenter\n            onTryAgain={tryAgain}\n            titleText={t('errors.callHelpCenter.vaAppNotWorking')}\n            callPhone={displayedTextPhoneNumber(t('8006982411'))}\n          />\n        )\n      default:\n        return <CallHelpCenter onTryAgain={tryAgain} />\n    }\n  }\n\n  return getSpecificErrorComponent(props)\n}\n\nexport default ErrorComponent\n";var i=e(64555);const l={},c=void 0,p={},m="<ErrorComponent screenID={ScreenIDTypesConstants.APPEAL_DETAILS_SCREEN_ID} />",E=[];function d(r){return(0,o.jsx)(i.A,{componentName:"ErrorComponent",example:m,codeString:a})}function u(r={}){const{wrapper:n}={...(0,s.R)(),...r.components};return n?(0,o.jsx)(n,{...r,children:(0,o.jsx)(d,{...r})}):d()}},64555:(r,n,e)=>{e.d(n,{A:()=>p});e(96540);var t=e(58069),o=e(65537),s=e(79329),a=e(9540),i=e(84476),l=e(74848);const c=({props:r})=>r?(0,l.jsx)(l.Fragment,{children:i.Ay.isEmpty(r)?(0,l.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Name"}),(0,l.jsx)("th",{children:"Type"}),(0,l.jsx)("th",{children:"Default Value"}),(0,l.jsx)("th",{children:"Required"}),(0,l.jsx)("th",{children:"Description"})]})}),(0,l.jsx)("tbody",{children:Object.keys(r).map((n=>(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:n})}),(0,l.jsx)("td",{style:{minWidth:200},children:r[n].type?.name}),(0,l.jsx)("td",{children:r[n].defaultValue&&r[n].defaultValue.value.toString()}),(0,l.jsx)("td",{children:r[n].required?"Yes":"No"}),(0,l.jsx)("td",{children:r[n].description})]},n)))})]})}):null;function p(r){const n=(0,a.d)(r.componentName),{description:e,displayName:i,props:p}=n[0],m=`How to use the ${i} component`,E=`Full code for the ${i} component`;return(0,l.jsxs)(l.Fragment,{children:[e,(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsxs)(o.A,{children:[(0,l.jsx)(s.A,{value:"props",label:"Properties",children:(0,l.jsx)(c,{props:p})}),(0,l.jsx)(s.A,{value:"example",label:"Example",children:r.example&&(0,l.jsx)(t.A,{title:m,className:"language-tsx test",children:r.example})}),(0,l.jsx)(s.A,{value:"code",label:"Source Code",children:r.codeString&&(0,l.jsx)(t.A,{title:E,className:"language-tsx",children:r.codeString})}),(0,l.jsx)(s.A,{value:"accessibility",label:"Accessibility",children:(0,l.jsx)("pre",{className:"preText",children:r.accessibilityInfo})})]})]})}}}]);