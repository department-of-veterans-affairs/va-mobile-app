"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[687],{7348:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,exampleString:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>g});const s=JSON.parse('{"id":"Flagship design library/Components/Alerts and Progress/MessageAlert","title":"MessageAlert","description":"","source":"@site/docs/Flagship design library/Components/Alerts and Progress/MessageAlert.mdx","sourceDirName":"Flagship design library/Components/Alerts and Progress","slug":"/Flagship design library/Components/Alerts and Progress/MessageAlert","permalink":"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/MessageAlert","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Loading indicator","permalink":"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/LoadingComponent"},"next":{"title":"Snackbar","permalink":"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/Snackbar"}}');var t=n(74848),o=n(28453);n(58069);const a="import React, { FC, RefObject } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ScrollView } from 'react-native'\n\nimport { AlertWithHaptics, Box, LinkWithAnalytics, TextView, VABulletList } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { useRouteNavigation, useTheme } from 'utils/hooks'\n\nexport type MessageAlertProps = {\n  /** Optional boolean for determining when to focus on error alert boxes. */\n  focusOnError?: boolean\n  /**sets if there is validation errors */\n  hasValidationError?: boolean\n  /**sets if attempted to save a draft */\n  saveDraftAttempted?: boolean\n  /** optional ref for parent scroll view */\n  scrollViewRef?: RefObject<ScrollView>\n  /** optional list of alertbox failed reasons, supplied by FormWrapper component */\n  errorList?: { [key: number]: string }\n  /** sets if triage error returned from api */\n  replyTriageError?: boolean\n}\n\n/**Common component to show a message alert when saving or sending a secure message */\nconst MessageAlert: FC<MessageAlertProps> = ({\n  hasValidationError,\n  saveDraftAttempted,\n  scrollViewRef,\n  focusOnError,\n  errorList,\n  replyTriageError,\n}) => {\n  const theme = useTheme()\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const navigateTo = useRouteNavigation()\n\n  const onGoToInbox = (): void => {\n    navigateTo('SecureMessaging', { activeTab: 0 })\n  }\n\n  const bulletedListOfText = []\n  if (errorList) {\n    for (const key in errorList) {\n      if (errorList[key] !== '') {\n        bulletedListOfText.push(`${errorList[key]}`)\n      }\n    }\n  }\n\n  const text = saveDraftAttempted\n    ? t('secureMessaging.formMessage.saveDraft.validation.text')\n    : t('secureMessaging.formMessage.sendMessage.validation.text')\n\n  return hasValidationError ? (\n    <Box mb={theme.dimensions.standardMarginBetween}>\n      <AlertWithHaptics\n        variant=\"error\"\n        header={t('secureMessaging.formMessage.weNeedMoreInfo')}\n        description={text}\n        scrollViewRef={scrollViewRef}\n        focusOnError={focusOnError}>\n        <VABulletList listOfText={bulletedListOfText} />\n      </AlertWithHaptics>\n    </Box>\n  ) : replyTriageError ? (\n    <Box mb={theme.dimensions.standardMarginBetween}>\n      <AlertWithHaptics\n        variant=\"error\"\n        header={t('secureMessaging.sendError.title')}\n        description={t('secureMessaging.reply.error.youCantSend')}\n        scrollViewRef={scrollViewRef}\n        focusOnError={focusOnError}>\n        <TextView\n          variant=\"MobileBody\"\n          paragraphSpacing={true}\n          accessibilityLabel={t('secureMessaging.reply.error.ifYouThinkA11y')}>\n          {t('secureMessaging.reply.error.ifYouThink')}\n        </TextView>\n        <LinkWithAnalytics type=\"custom\" text={t('secureMessaging.goToInbox')} onPress={onGoToInbox} />\n      </AlertWithHaptics>\n    </Box>\n  ) : (\n    <></>\n  )\n}\nexport default MessageAlert\n";var i=n(64555);const l={},c=void 0,d={},p="<MessageAlert\nhasValidationError={formContainsError}\nsaveDraftAttempted={onSaveDraftClicked}\nsavingDraft={savingDraft}\n/>",g=[];function m(e){return(0,t.jsx)(i.A,{componentName:"MessageAlert",example:p,codeString:a})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(m,{...e})}):m()}},9540:(e,r,n)=>{n.d(r,{d:()=>t});var s=n(72077);const t=e=>(0,s.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((r=>r.displayName===e))},64555:(e,r,n)=>{n.d(r,{A:()=>d});n(96540);var s=n(58069),t=n(65537),o=n(79329),a=n(9540),i=n(84476),l=n(74848);const c=e=>{let{props:r}=e;return r?(0,l.jsx)(l.Fragment,{children:i.Ay.isEmpty(r)?(0,l.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Name"}),(0,l.jsx)("th",{children:"Type"}),(0,l.jsx)("th",{children:"Default Value"}),(0,l.jsx)("th",{children:"Required"}),(0,l.jsx)("th",{children:"Description"})]})}),(0,l.jsx)("tbody",{children:Object.keys(r).map((e=>(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:e})}),(0,l.jsx)("td",{style:{minWidth:200},children:r[e].type?.name}),(0,l.jsx)("td",{children:r[e].defaultValue&&r[e].defaultValue.value.toString()}),(0,l.jsx)("td",{children:r[e].required?"Yes":"No"}),(0,l.jsx)("td",{children:r[e].description})]},e)))})]})}):null};function d(e){const r=(0,a.d)(e.componentName),{description:n,displayName:i,props:d}=r[0],p=`How to use the ${i} component`,g=`Full code for the ${i} component`;return(0,l.jsxs)(l.Fragment,{children:[n,(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsxs)(t.A,{children:[(0,l.jsx)(o.A,{value:"props",label:"Properties",children:(0,l.jsx)(c,{props:d})}),(0,l.jsx)(o.A,{value:"example",label:"Example",children:e.example&&(0,l.jsx)(s.A,{title:p,className:"language-tsx test",children:e.example})}),(0,l.jsx)(o.A,{value:"code",label:"Source Code",children:e.codeString&&(0,l.jsx)(s.A,{title:g,className:"language-tsx",children:e.codeString})}),(0,l.jsx)(o.A,{value:"accessibility",label:"Accessibility",children:(0,l.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}}}]);