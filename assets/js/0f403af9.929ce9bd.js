"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1770],{5153:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/dev-tools-components-7a1bdcbe594b6051c83f67d48c87b6b7.png"},8901:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"FrontEnd/DebuggingToolsInstructions","title":"Debugging tools","description":"This page shows the different debug tools that we use to debug the VAMobile app. You can use your preferred method.","source":"@site/development/FrontEnd/DebuggingToolsInstructions.md","sourceDirName":"FrontEnd","slug":"/FrontEnd/DebuggingToolsInstructions","permalink":"/va-mobile-app/development/FrontEnd/DebuggingToolsInstructions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Debugging tools"},"sidebar":"tutorialSidebar","previous":{"title":"useValidateMessageWithSignature","permalink":"/va-mobile-app/development/FrontEnd/CustomHooks/useValidateMessageWithSignature"},"next":{"title":"Maintenance windows","permalink":"/va-mobile-app/development/FrontEnd/MaintenanceWindows"}}');var s=t(74848),i=t(28453);const r={title:"Debugging tools"},a="Debugging Instructions",l={},d=[{value:"Launching The Debugger",id:"launching-the-debugger",level:2},{value:"IOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"React Native DevTools",id:"react-native-devtools",level:3},{value:"Console",id:"console",level:4},{value:"Sources and breakpoints",id:"sources-and-breakpoints",level:4},{value:"Memory",id:"memory",level:4},{value:"React DevTool Features",id:"react-devtool-features",level:3},{value:"Components",id:"components",level:4},{value:"Profiler",id:"profiler",level:4},{value:"Reactotron",id:"reactotron",level:2},{value:"VSCode React Native Tools Extension",id:"vscode-react-native-tools-extension",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"debugging-instructions",children:"Debugging Instructions"})}),"\n",(0,s.jsx)(n.p,{children:"This page shows the different debug tools that we use to debug the VAMobile app. You can use your preferred method."}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsxs)(n.p,{children:["For all the debugging tools you need to ",(0,s.jsx)(n.code,{children:"yarn start"})," the ",(0,s.jsx)(n.code,{children:"metro server"})," so that the debugger can  connect to it or it will not work."]})}),"\n",(0,s.jsx)(n.h2,{id:"launching-the-debugger",children:"Launching The Debugger"}),"\n",(0,s.jsxs)(n.p,{children:["This section will apply to all the tools. More information on the ",(0,s.jsx)(n.a,{href:"https://reactnative.dev/docs/debugging",children:"react native debugging page"})]}),"\n",(0,s.jsx)(n.h3,{id:"ios",children:"IOS"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["If on physical device ",(0,s.jsx)(n.code,{children:"Shake your device"}),". If using a ",(0,s.jsx)(n.code,{children:"simulator"})," press the shortcut  ",(0,s.jsx)(n.code,{children:"\u2318D"})," or by selecting the ",(0,s.jsx)(n.code,{children:"Shake Gesture"})," inside the hardware menu in the simulator."]}),"\n",(0,s.jsxs)(n.li,{children:["On the Action Sheet select ",(0,s.jsx)(n.code,{children:"Open DevTools"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"IOS Debug Menu",src:t(40831).A+"",width:"306",height:"656"})}),"\n",(0,s.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["If using a physical device use ",(0,s.jsx)(n.code,{children:"Shake your device"})]}),"\n",(0,s.jsxs)(n.li,{children:["Android emulators: ",(0,s.jsx)(n.code,{children:"Cmd \u2318 + M (macOS)"})," or ",(0,s.jsx)(n.code,{children:"Ctrl + M (Windows and Linux)"})]}),"\n",(0,s.jsxs)(n.li,{children:["On the dialog select ",(0,s.jsx)(n.code,{children:"Open DevTools"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively on Android: ",(0,s.jsx)(n.code,{children:"adb shell input keyevent 82"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Android Debug Menu",src:t(18257).A+"",width:"287",height:"639"})}),"\n",(0,s.jsx)(n.h3,{id:"react-native-devtools",children:"React Native DevTools"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://reactnative.dev/docs/react-native-devtools",children:"React Native DevTools"})," is the built-in debugger for React Native, providing tools to inspect and debug your JavaScript code, similar to browser devtools."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"React Native Devtools is only available with the Hermes engine, and requires Google Chrome or Microsoft Edge installed."})}),"\n",(0,s.jsx)(n.p,{children:"On first launch, it opens to a welcome panel with a console drawer for logs and runtime interaction. Use the top navigation to access features like the React Components Inspector and Profiler."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Dev Tools Welcome",src:t(74961).A+"",width:"1192",height:"819"})}),"\n",(0,s.jsx)(n.h4,{id:"console",children:"Console"}),"\n",(0,s.jsxs)(n.p,{children:["The console panel allows you to view logs, evaluate Javascript, inspect object properties, ",(0,s.jsx)(n.a,{href:"https://developer.chrome.com/docs/devtools/console/reference",children:"and more"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Dev Tools Console",src:t(72810).A+"",width:"1124",height:"783"})}),"\n",(0,s.jsx)(n.h4,{id:"sources-and-breakpoints",children:"Sources and breakpoints"}),"\n",(0,s.jsxs)(n.p,{children:["The Sources panel lets you view your app\u2019s source files and set breakpoints to pause execution and inspect the live state of your code.\n",(0,s.jsx)(n.a,{href:"https://developer.chrome.com/docs/devtools/javascript/breakpoints",children:"Pause your code with breakpoints"})]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"Cmd \u2318 + P"}),"/",(0,s.jsx)(n.code,{children:"Ctrl \u2318 + P"})," to navigate to a source file\nClick the line number on the left hand side to add a breakpoint\nUse navigation tools at the top right to step through code"]})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Dev Tools Breakpoints",src:t(31037).A+"",width:"1432",height:"786"})}),"\n",(0,s.jsx)(n.h4,{id:"memory",children:"Memory"}),"\n",(0,s.jsxs)(n.p,{children:["The memory panel allows you to take a heap snapshot and view the memory usage of your Javascript code over time.\n",(0,s.jsx)(n.a,{href:"https://developer.chrome.com/docs/devtools/memory-problems/heap-snapshots",children:"Record heap snapshots"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Dev Tools Memory",src:t(79588).A+"",width:"1190",height:"815"})}),"\n",(0,s.jsx)(n.h3,{id:"react-devtool-features",children:"React DevTool Features"}),"\n",(0,s.jsxs)(n.p,{children:["The integrated Components and Profiler panels contain all the features of the ",(0,s.jsx)(n.a,{href:"https://react.dev/learn/react-developer-tools",children:"React DevTools"})," browser extension."]}),"\n",(0,s.jsx)(n.h4,{id:"components",children:"Components"}),"\n",(0,s.jsx)(n.p,{children:"The React Components panel allows you to inspect and update the rendered React component tree."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Dev Tools Components",src:t(5153).A+"",width:"1584",height:"779"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Hover or select an element on the tree to highlight it on the device\nProps and state on a component can be viewed and modified at runtime\nTo locate an element, click on the top-left ",(0,s.jsx)(n.code,{children:"Select element"})," button, then tap any element on the app"]})}),"\n",(0,s.jsx)(n.h4,{id:"profiler",children:"Profiler"}),"\n",(0,s.jsx)(n.p,{children:"The React Profiler panel allows you to record performance profiles and understand timings of component renders."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Dev Tools Profiler",src:t(57734).A+"",width:"1397",height:"775"})}),"\n",(0,s.jsx)(n.h2,{id:"reactotron",children:"Reactotron"}),"\n",(0,s.jsx)(n.p,{children:"Reactotron is a debugging tool for both React and React Native applications. It offers a user-friendly interface that allows developers to inspect application state, track network requests, and analyze performance metrics."}),"\n",(0,s.jsx)(n.p,{children:"Reactotron can be used for the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"view your application state"}),"\n",(0,s.jsx)(n.li,{children:"show API requests & responses"}),"\n",(0,s.jsx)(n.li,{children:"perform quick performance benchmarks"}),"\n",(0,s.jsx)(n.li,{children:"subscribe to parts of your application state"}),"\n",(0,s.jsxs)(n.li,{children:["display messages similar to ",(0,s.jsx)(n.code,{children:"console.log"})]}),"\n",(0,s.jsx)(n.li,{children:"track global errors with source-mapped stack traces including saga stack traces!"}),"\n",(0,s.jsx)(n.li,{children:"dispatch actions like a government-run mind control experiment"}),"\n",(0,s.jsx)(n.li,{children:"hot swap your app's state using Redux or mobx-state-tree"}),"\n",(0,s.jsx)(n.li,{children:"show image overlay in React Native"}),"\n",(0,s.jsx)(n.li,{children:"track your Async Storage in React Native"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://docs.infinite.red/reactotron/quick-start/react-native/",children:"Quick Start Guide for Reactotron"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Reactotron",src:t(30917).A+"",width:"670",height:"769"})}),"\n",(0,s.jsx)(n.h2,{id:"vscode-react-native-tools-extension",children:"VSCode React Native Tools Extension"}),"\n",(0,s.jsx)(n.p,{children:"This extension will allow you to add breakpoints on the actual code in VSCode."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If not installed, install the React Native Tools extension in VSCode and follow the setup instructions in the extensions document."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"React Tools VSCode",src:t(69537).A+"",width:"761",height:"242"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"After the extension is installed launch the debugger. Select the Run and Debug Icon on the left explorer and click the play button on the Attach tp packager dropdown."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Launch Debugger",src:t(51619).A+"",width:"392",height:"242"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Launch the debugger from your device."}),"\n",(0,s.jsx)(n.p,{children:"The debugger should attach to the VSCode debugger and stop on any breakpoints"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"VSCode breakpoint",src:t(38255).A+"",width:"706",height:"487"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},18257:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/android-debug-dialog-c1b2c6036f260f963a92267cf5fe4202.png"},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(96540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},30917:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/reactotron-example-4d720fa561be0c3932e0522f59e0b629.jpg"},31037:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/dev-tools-breakpoints-eafe5aee2285b98a1033a470aab462fc.png"},38255:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/vscode-debugger-breakpoint-baeb8544624e79e49eeba2633eeca65a.png"},40831:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/ios-debug-dialog-e3b6a6399fba13b8b5b70fcbbbd7db71.png"},51619:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/vscode-launch-debugger-3013c3378edccb8d9baf53de7dab6595.png"},57734:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/dev-tools-profiler-04c4411ec3be9aff01991a93e600e9d1.png"},69537:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/vscode-react-tools-ext-d8a554f524ac4d4f0374288bf3170273.png"},72810:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/dev-tools-console-c78b82054d7617a22b89d3d6caf56ad4.png"},74961:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/dev-tools-welcome-b33fb0fe1fcdaba3b32e256084a68171.png"},79588:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/dev-tools-memory-accea1551bb022bbe2d11cccd23087ed.png"}}]);