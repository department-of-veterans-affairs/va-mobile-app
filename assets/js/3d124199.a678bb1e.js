"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6800],{61815:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>g});var i=a(58168),n=(a(96540),a(15680));a(41873);const o={title:"Adding new e2e tests to Availability Framework and Nav",sidebar_position:1},r="Adding new e2e tests to Availability Framework and Navigation",l={unversionedId:"QA/QualityAssuranceProcess/Automation/AddingNewFeatures",id:"QA/QualityAssuranceProcess/Automation/AddingNewFeatures",title:"Adding new e2e tests to Availability Framework and Nav",description:"Adding a new e2e test to navigation (Note: The only things tested are places in the app where you have the ability to navigate through the bottom navigation bar)",source:"@site/docs/QA/QualityAssuranceProcess/Automation/AddingNewFeatures.md",sourceDirName:"QA/QualityAssuranceProcess/Automation",slug:"/QA/QualityAssuranceProcess/Automation/AddingNewFeatures",permalink:"/va-mobile-app/docs/QA/QualityAssuranceProcess/Automation/AddingNewFeatures",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Adding new e2e tests to Availability Framework and Nav",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"UI Automation Testing",permalink:"/va-mobile-app/docs/QA/QualityAssuranceProcess/Automation/"},next:{title:"Detox Best Practices",permalink:"/va-mobile-app/docs/QA/QualityAssuranceProcess/Automation/Detox Best Practices"}},s={},g=[{value:"Adding a new e2e test to navigation (Note: The only things tested are places in the app where you have the ability to navigate through the bottom navigation bar)",id:"adding-a-new-e2e-test-to-navigation-note-the-only-things-tested-are-places-in-the-app-where-you-have-the-ability-to-navigate-through-the-bottom-navigation-bar",level:2},{value:"Adding a new e2e test to Availability Framework",id:"adding-a-new-e2e-test-to-availability-framework",level:2}],u={toc:g},y="wrapper";function d(e){let{components:t,...a}=e;return(0,n.yg)(y,(0,i.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"adding-new-e2e-tests-to-availability-framework-and-navigation"},"Adding new e2e tests to Availability Framework and Navigation"),(0,n.yg)("h2",{id:"adding-a-new-e2e-test-to-navigation-note-the-only-things-tested-are-places-in-the-app-where-you-have-the-ability-to-navigate-through-the-bottom-navigation-bar"},"Adding a new e2e test to navigation (Note: The only things tested are places in the app where you have the ability to navigate through the bottom navigation bar)"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Open the Navigation.e2e test"),(0,n.yg)("li",{parentName:"ol"},"Add the necessary information to navigationDic.  The dictionary is broken down into the 4 sections found in the bottom navigation bar: Home, Health, Benefits, and Payments.  Add new tests under the appropriate key value.  ",(0,n.yg)("ol",{parentName:"li"},(0,n.yg)("li",{parentName:"ol"},"The array follows the following format: ","[a, b, c]",(0,n.yg)("ol",{parentName:"li"},(0,n.yg)("li",{parentName:"ol"},"For single e2e tests: string of name of the test.  Ex: \u2018DisabilityRatings.e2e\u2019. For multiple e2e tests: array of strings with the names of the tests. Ex: ","[\u2018Claims.e2e\u2019, \u2018Appeals.e2e\u2019]"),(0,n.yg)("li",{parentName:"ol"},"String/array of strings that tells detox how to navigate to your feature. ",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Notes:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"The test will always navigate to the key value in which the array is in (Home, Health, Benefits, and Payments) first"),(0,n.yg)("li",{parentName:"ul"},"If scrolling is required for detox to click on something use the featureID dictionary. It follows the following format: 'string of what needs to be clicked on (should match what is in navigationDic): testID for the scrollView being utilized'"))),(0,n.yg)("li",{parentName:"ul"},"Ex: DisabilityRatings (Benefits ",">"," Disability rating) is \u2018Disability rating\u2019"),(0,n.yg)("li",{parentName:"ul"},"Ex: Claim details (Benefits ",">"," Claims ",">"," Claims history ",">"," 'name of claim') is an array of strings of the following: ","['Claims', 'Claims history', 'Received July 20, 2021']"))),(0,n.yg)("li",{parentName:"ol"},"Name of the heading for the page. This is what the tests look for to verify it is in the right location.")))))),(0,n.yg)("h2",{id:"adding-a-new-e2e-test-to-availability-framework"},"Adding a new e2e test to Availability Framework"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Open the AvailabilityFramework.e2e test"),(0,n.yg)("li",{parentName:"ol"},"Add the new waygate to AFNavigationForIndividual. The array has the following format: ","[String value indicating the e2e test covered, String value of the waygate name, string of navigation value 1, string of navigation value 2]",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"String of navigation values <number",">"," tells detox how to navigate to the feature starting from the Home screen. ",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Notes:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"If scrolling is required for detox to click on something add an else if (featureNavigationArray","[j]"," === 'string of navigation value') statement to the navigateToFeature function in utils.ts"),(0,n.yg)("li",{parentName:"ul"},"If you are running into issues with inAppReview add your waygate to the if statement found in enableAF")))))))))}d.isMDXComponent=!0},15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>m});var i=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=i.createContext({}),g=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=g(e.components);return i.createElement(s.Provider,{value:t},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),y=g(a),c=n,m=y["".concat(s,".").concat(c)]||y[c]||d[c]||o;return a?i.createElement(m,r(r({ref:t},u),{},{components:a})):i.createElement(m,r({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[y]="string"==typeof e?e:n,r[1]=l;for(var g=2;g<o;g++)r[g]=a[g];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}c.displayName="MDXCreateElement"},41873:(e,t,a)=>{a(96540)}}]);