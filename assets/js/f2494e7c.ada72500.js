"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4941],{9540:(e,n,t)=>{t.d(n,{d:()=>i});var s=t(72077);const i=e=>(0,s.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((n=>n.displayName===e))},60116:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,exampleString:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"Flagship design library/Components/Tags/Tag","title":"Tag","description":"Tags provide quick contextual keywords to inform status of a row or item.","source":"@site/docs/Flagship design library/Components/Tags/Tag.mdx","sourceDirName":"Flagship design library/Components/Tags","slug":"/Flagship design library/Components/Tags/Tag","permalink":"/va-mobile-app/docs/Flagship design library/Components/Tags/Tag","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Tag"},"sidebar":"tutorialSidebar","previous":{"title":"Tags","permalink":"/va-mobile-app/docs/Flagship design library/Components/Tags/"},"next":{"title":"Text views","permalink":"/va-mobile-app/docs/Flagship design library/Components/TextViews/"}}');var i=t(74848),o=t(28453),a=(t(58069),t(64555));const l="import React, { FC } from 'react'\nimport { AccessibilityRole, Pressable, PressableProps, useWindowDimensions } from 'react-native'\n\nimport { Icon, IconProps } from '@department-of-veterans-affairs/mobile-component-library'\n\nimport { useTheme } from 'utils/hooks'\n\nimport Box, { BoxProps } from './Box'\nimport TextView from './TextView'\n\nexport const LabelTagTypeConstants: {\n  tagBlue: LabelTagTypes\n  tagInactive: LabelTagTypes\n  tagYellow: LabelTagTypes\n  tagGreen: LabelTagTypes\n} = {\n  tagBlue: 'tagBlue',\n  tagInactive: 'tagInactive',\n  tagYellow: 'tagYellow',\n  tagGreen: 'tagGreen',\n}\n\nexport type LabelTagTypes = 'tagBlue' | 'tagInactive' | 'tagYellow' | 'tagGreen'\n\nexport type LabelTagProps = {\n  /** Message to be shown on the tag*/\n  text: string\n\n  /** Defines the color and look of the tag */\n  labelType: LabelTagTypes\n\n  /** Optional accessibility label */\n  a11yLabel?: string\n\n  /** Optional method called when tag is pressed */\n  onPress?: () => void\n\n  /** Optional accessibility hint if there is an on press */\n  a11yHint?: string\n\n  /** Optional role to override the default role of button */\n  a11yRole?: AccessibilityRole\n}\n\n/**Common component to show a text inside a tag*/\nconst LabelTag: FC<LabelTagProps> = ({ text, labelType, onPress, a11yHint, a11yLabel, a11yRole }) => {\n  const theme = useTheme()\n  const fontScale = useWindowDimensions().fontScale\n  const adjustSize = fontScale >= 2\n  const textView = (\n    <TextView\n      flexWrap={'wrap'}\n      color={'labelTag'}\n      variant={'LabelTag'}\n      pl={adjustSize ? 30 : 12}\n      pr={adjustSize ? 8 : 12}\n      pt={adjustSize ? 8 : 4}\n      pb={adjustSize ? 12 : 4}>\n      {text}\n    </TextView>\n  )\n\n  let wrapperProps: BoxProps = {\n    minWidth: theme.dimensions.tagMinWidth,\n    minHeight: theme.dimensions.touchableMinHeight,\n    justifyContent: 'center',\n    alignSelf: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: labelType,\n    borderColor: labelType,\n    borderWidth: 1,\n    borderRadius: 100,\n  }\n\n  const getContent = () => {\n    if (!onPress) {\n      if (a11yLabel) {\n        wrapperProps = {\n          ...wrapperProps,\n          accessibilityLabel: a11yLabel,\n        }\n      }\n\n      return <Box {...wrapperProps}>{textView}</Box>\n    }\n\n    let pressableProps: PressableProps = {\n      onPress: onPress,\n      accessible: true,\n      accessibilityRole: a11yRole || 'button',\n    }\n\n    if (a11yHint) {\n      pressableProps = {\n        ...pressableProps,\n        accessibilityHint: a11yHint,\n      }\n    }\n\n    if (a11yLabel) {\n      pressableProps = {\n        ...pressableProps,\n        accessibilityLabel: a11yLabel,\n      }\n    }\n\n    const infoIconProps: IconProps = {\n      name: 'Info',\n      fill: theme.colors.icon.tagInfoIcon,\n      height: adjustSize ? 13 : 20,\n      width: adjustSize ? 13 : 20,\n    }\n\n    return (\n      <Pressable {...pressableProps}>\n        <Box {...wrapperProps}>\n          {textView}\n          <Box mr={adjustSize ? 5 : 10}>\n            <Icon {...infoIconProps} />\n          </Box>\n        </Box>\n      </Pressable>\n    )\n  }\n\n  return getContent()\n}\n\nexport default LabelTag\n",r={title:"Tag"},c=void 0,d={},h="<LabelTag text={'value'} />",p=[{value:"Examples",id:"examples",level:2},{value:"Default",id:"default",level:3},{value:"Variations",id:"variations",level:3},{value:"Usage",id:"usage",level:2},{value:"When to use Tags",id:"when-to-use-tags",level:3},{value:"How this component works",id:"how-this-component-works",level:3},{value:"Choosing between variations",id:"choosing-between-variations",level:3},{value:"Instances of this component in production",id:"instances-of-this-component-in-production",level:3},{value:"Content considerations",id:"content-considerations",level:2},{value:"Accessibility considerations",id:"accessibility-considerations",level:2},{value:"Related",id:"related",level:2},{value:"Code usage",id:"code-usage",level:2}];function g(e){const n={a:"a",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Tags provide quick contextual keywords to inform status of a row or item."}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"default",children:"Default"}),"\n",(0,i.jsx)("iframe",{width:"800",height:"450",title:"Image of master component in Figma showing light and dark mode",src:"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com/file/QVLPB3eOunmKrgQOuOt0SU/%F0%9F%93%90-DesignLibrary2.0---VAMobile?type=design&node-id=8429-12889&mode=design&t=KnuQLCCqRJnHgKVJ-4",title:"Image of master component in Figma showing light and dark mode",allowfullscreen:!0}),"\n",(0,i.jsx)(n.h3,{id:"variations",children:"Variations"}),"\n",(0,i.jsx)("iframe",{width:"800",height:"450",title:"Image of component examples in Figma",src:"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com/file/QVLPB3eOunmKrgQOuOt0SU/%F0%9F%93%90-DesignLibrary2.0---VAMobile?type=design&node-id=8429-12895&mode=design&t=KnuQLCCqRJnHgKVJ-4",allowfullscreen:!0}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-tags",children:"When to use Tags"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When there is a list of information with different statuses for different items"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-this-component-works",children:"How this component works"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Only one tag should be used per instance."}),"\n",(0,i.jsx)(n.li,{children:"The trailing icon is optional, as the status definition will not apply in all use cases. When the icon is used, the tag becomes a tappable button and opens a full panel."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"choosing-between-variations",children:"Choosing between variations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Static vs Interactive","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Static"}),": To indicate a status that does not need further explanation or definition"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interactive"}),": When you need to provide additional context for a status, use the interactive version with the icon."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Status","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Informative (blue)"}),": To indicate neutral, default content. Consider the Informative status for new content with expected changes in status and trailing actions to take, like an Active prescription."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Success (green)"}),": To indicate completed, finalized content. Consider the Success status for content with no further outstanding tasks, like a Confirmed appointment, or an In-Progress prescription refill."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indeterminate/Unresolved (yellow)"}),": To indicate pending actions or content that is still in-progress. Consider the Indeterminate status for content either the system or user can resolve, like a Pending appointment, or an On-Hold prescription refill."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inactive (gray)"}),': To indicate content that has no further actions. Consider the Inactive status for "dead ends", such as a Read message, a Canceled appointment, or an Expired prescription.']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"instances-of-this-component-in-production",children:"Instances of this component in production"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"In Prescription cards"}),"\n",(0,i.jsx)(n.li,{children:"In Appointment cards"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"content-considerations",children:"Content considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use common VA language, words, or terms for copy."}),"\n",(0,i.jsx)(n.li,{children:"Keep copy to as few words as possible (1-2 words). There are exceptions where 3 or 4 words must be used in cases of VA-specific phrases or words."}),"\n",(0,i.jsx)(n.li,{children:"The trailing info icon is optional. Not all tags will need one for further definition of the copy."}),"\n",(0,i.jsx)(n.li,{children:"Use sentence case (i.e., Sentence case, not Title Case). Exceptions include words/phrases that use Title Case in other VA tools/sites."}),"\n",(0,i.jsx)(n.li,{children:"The trailing icon should clearly describe the type of content that it will display. For example, use the info icon when additional information will display on tap."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"accessibility-considerations",children:"Accessibility considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If user has magnification settings, the trailing info-icon should scale along with the font."}),"\n",(0,i.jsx)(n.li,{children:"The icon is decorative, so it does not need to be read by a screen reader. If the icon is included, the tag should be read as a button."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related",children:"Related"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://design.va.gov/components/tag",children:"Tag - VA Design System"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://designsystem.digital.gov/components/tag/",children:"Tag - USWDS"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://m3.material.io/components/chips/overview",children:"Chips - Material Design"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"code-usage",children:"Code usage"}),"\n","\n",(0,i.jsx)(a.A,{componentName:"LabelTag",example:h,codeString:l})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},64555:(e,n,t)=>{t.d(n,{A:()=>d});t(96540);var s=t(58069),i=t(65537),o=t(79329),a=t(9540),l=t(84476),r=t(74848);const c=e=>{let{props:n}=e;return n?(0,r.jsx)(r.Fragment,{children:l.Ay.isEmpty(n)?(0,r.jsx)("pre",{className:"preText",children:"This component does not have props defined"}):(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Name"}),(0,r.jsx)("th",{children:"Type"}),(0,r.jsx)("th",{children:"Default Value"}),(0,r.jsx)("th",{children:"Required"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsx)("tbody",{children:Object.keys(n).map((e=>(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:e})}),(0,r.jsx)("td",{style:{minWidth:200},children:n[e].type?.name}),(0,r.jsx)("td",{children:n[e].defaultValue&&n[e].defaultValue.value.toString()}),(0,r.jsx)("td",{children:n[e].required?"Yes":"No"}),(0,r.jsx)("td",{children:n[e].description})]},e)))})]})}):null};function d(e){const n=(0,a.d)(e.componentName),{description:t,displayName:l,props:d}=n[0],h=`How to use the ${l} component`,p=`Full code for the ${l} component`;return(0,r.jsxs)(r.Fragment,{children:[t,(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsxs)(i.A,{children:[(0,r.jsx)(o.A,{value:"props",label:"Properties",children:(0,r.jsx)(c,{props:d})}),(0,r.jsx)(o.A,{value:"example",label:"Example",children:e.example&&(0,r.jsx)(s.A,{title:h,className:"language-tsx test",children:e.example})}),(0,r.jsx)(o.A,{value:"code",label:"Source Code",children:e.codeString&&(0,r.jsx)(s.A,{title:p,className:"language-tsx",children:e.codeString})}),(0,r.jsx)(o.A,{value:"accessibility",label:"Accessibility",children:(0,r.jsx)("pre",{className:"preText",children:e.accessibilityInfo})})]})]})}}}]);