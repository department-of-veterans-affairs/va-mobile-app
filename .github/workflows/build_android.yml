# Reusable workflow that sets up environment, installs depdendencies, and
# runs Android fastlane using provided inputs
name: "[Build] Reusable Android Workflow"

on:
  workflow_call:
    inputs:
      # Used to determine the environment variables to build the app with
      # Options: test, staging, production
      environment:
        type: string
        default: staging
      # Specifies which fastlane lane to run
      # Options: qa, rc, review, release, on_demand
      lane:
        #! TODO Change back to qa when done #BUG
        type: string
        default: review
        #! TODO default: qa
      # Release notes that will show next to the version in Firebase
      # Fastlane will default to "New QA version for {{DATE_TIME}}"
      notes:
        type: string
        default: ""
      # Google Play Console track to distribute to. Fastlane defaults to
      # "Development Team"
      ps_track:
        type: string
        default: ""
      # The branch or tag that we want to build from.  Defaults to the branch/tag that triggered
      # the automation, otherwise uses develop
      ref:
        type: string
        default: ""
      # Timestamp of the Slack thread where build related messages should be sent.
      # Gets assigned to the SLACK_THREAD_TS environment variable that Fastlane uses.
      slack_thread_ts:
        type: string
        default: ""
      # Version to use for production release. QA/On-demand builds will increment
      # upon the latest version in Google Play Console
      version:
        type: string
        default: qa

defaults:
  run:
    working-directory: VAMobile/android

env:
  # IAM staging app client secret
  APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
  # IAM production app client secret
  APP_CLIENT_SECRET_PROD: ${{ secrets.APP_CLIENT_SECRET_PROD }}
  # Password to enter demo mode from login screen
  DEMO_PASSWORD: ${{ secrets.DEMO_PASSWORD }}
  # Android Key Store Key Alias
  ANDROID_KS_KEY_ALIAS: ${{ secrets.ANDROID_KS_KEY_ALIAS }}
  # Android Key Store Key Alias Password
  ANDROID_KS_KEY_PW: ${{ secrets.ANDROID_KS_KEY_PW }}
  # Android Key Store Key Password
  ANDROID_KS_PW: ${{ secrets.ANDROID_KS_PW }}
  # App ID for Android project in Firebase
  FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
  # Filepath for firebase distribution key. Also used by fastlane
  FIREBASE_DIST_KEY_FILEPATH: ${{ secrets.FIREBASE_DIST_KEY_FILEPATH }}
  # Slack API token used by fastlane
  SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

jobs:
  build_android:
    runs-on: ubuntu-4-cores-latest
    steps:
      - name: Validate environment and lane matrix
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_THREAD_TS: ${{ inputs.slack_thread_ts }}
        shell: bash
        run: |
          # Define valid combinations as a matrix
          declare -A valid_combinations
          valid_combinations["production,review"]="✅"     # Release builds
          valid_combinations["production,release"]="✅"    # Go Live builds  
          valid_combinations["production,on_demand"]="✅"  # On-demand production
          valid_combinations["staging,qa"]="✅"            # QA builds
          valid_combinations["staging,rc"]="✅"            # RC builds
          valid_combinations["staging,on_demand"]="✅"     # On-demand staging
          valid_combinations["test,qa"]="✅"               # Test QA builds
          
          COMBO="${{ inputs.environment }},${{ inputs.lane }}"
          
          if [[ -z "${valid_combinations[$COMBO]}" ]]; then
            echo "❌ ERROR: Invalid environment and lane combination"
            echo "Environment: ${{ inputs.environment }}"
            echo "Lane: ${{ inputs.lane }}"
            # Send Slack notification before failing
            if [[ -n "$SLACK_THREAD_TS" && -n "$SLACK_API_TOKEN" ]]; then
              ERROR_MSG="🚨 VALIDATION FAILED: Invalid environment/lane combination for ${{ github.workflow }}. Environment: ${{ inputs.environment }}, Lane: ${{ inputs.lane }}. See workflow run for valid combinations."
              curl -X POST \
                   -H 'Authorization: Bearer '"$SLACK_API_TOKEN" \
                   -H 'Content-type: application/json' \
                   -d '{"channel": "va-mobile-app", "text": "'"$ERROR_MSG"'", "thread_ts": "'"$SLACK_THREAD_TS"'"}' \
                   https://slack.com/api/chat.postMessage || true
              echo "Slack notification sent"
            else
              echo "Slack notification skipped (missing thread_ts or token)"
            fi
            
            exit 1
          fi
          
          echo "✅ Valid combination: $COMBO"
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Set git config
        run: |
          git config --global user.name 'VA Mobile Automation Bot'
          git config --global user.email 'VAFlagshipMobile@va.gov'
      # Decodes base64 encoded keystore, Play Store service distribution key,
      # Firebase distribution key, and Firebase analytics/crashlytics json
      - name: Decode base64 encoded keys
        run: |
          mkdir keys
          cd keys
          echo "${{ secrets.GOOGLE_KS }}" | base64 --decode > vamobile
          echo "${{ secrets.GOOGLE_SA_JSON }}" | base64 --decode > service-account.json
          echo "${{ secrets.FIREBASE_DIST_FILE_BASE64 }}" | base64 --decode > firebase-dist.json
          cd ../app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > google-services.json
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "microsoft"
      - name: Setup ruby and restore bundler cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true
          working-directory: VAMobile/android
      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: "VAMobile/.nvmrc"
          cache: "yarn"
          cache-dependency-path: "VAMobile/yarn.lock"
      - name: Install npm dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd VAMobile && yarn install --frozen-lockfile --non-interactive
      - name: Set app environment variables
        run: |
           echo "Environment and Lane are: ${{ inputs.environment }}"
          #  yarn env:${{ inputs.environment }}
        #TODO Commenting out for testing #11455
      # - name: Bundle app
      #   run: yarn bundle:android
      # - name: Update fastlane
      #   run: |
          # bundle update fastlane
          # bundle exec fastlane update_plugins
      # - name: Set SLACK_THREAD_TS environment variable
      #   if: inputs.slack_thread_ts
      #   run: echo SLACK_THREAD_TS=${{inputs.slack_thread_ts}} >> $GITHUB_ENV
      # - name: Run fastlane with retries
      #   uses: nick-fields/retry@v2
      #   with:
      #     timeout_minutes: 20
      #     max_attempts: 3
      #     command: cd VAMobile/android && bundle exec fastlane ${{ inputs.lane }} --verbose version:"${{ inputs.version }}" notes:"${{ inputs.notes }}" psTrack:"${{ inputs.ps_track }}"
