# Checks if QA approvals are necessary, and if so runs the associated action when a new review is added

name: '[Utils] QA required approval'

on:
  pull_request:
    types: [opened, edited, converted_to_draft, ready_for_review, reopened]
    paths:
      - 'VAMobile/src'
      - 'VAMobile/e2e'
      - 'VAMobile/package.json'
      - 'VAMobile/.detoxrc.json'
      - '!VAMobile/src/*.test.tsx'
      - '!.github/**'
  pull_request_review:
    types: [submitted, dismissed]

jobs:
  check_for_qa_approval:
    name: Requires QA approval
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.FLAGSHIP_MOBILE_APP_ID }}
          private-key: ${{ secrets.FLAGSHIP_MOBILE_APP_PRIVATE_KEY }}
      - name: Check QA approval
        shell: bash
        env:
          APP_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "$APP_TOKEN" | gh auth login --with-token
          engineers=$(gh api orgs/department-of-veterans-affairs/teams/flagship-mobile-pr-reviewers/members | jq -c '[.[] .login]')
          qa_members=$(gh api orgs/department-of-veterans-affairs/teams/flagship-mobile-qa/members | jq -c '[.[] .login]')
          if [[ "${{ github.event.pull_request.user.login }}" == "dependabot[bot]" ]]
          then
            exit 0
          fi
          approvals=$(curl --request GET \
          --url https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews?per_page=100 \
          --header "Authorization: Bearer $APP_TOKEN" \
          --header 'Content-Type: application/json' |
          jq -c '[map(select(.state == "APPROVED")) | .[] .user.login]')
          required_approval_count=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/department-of-veterans-affairs/va-mobile-app/branches/develop/protection | \
          jq -c '.required_pull_request_reviews.required_approving_review_count')
          if [[ $(jq '. | length' <<< "$approvals") -ge $required_approval_count ]]
          then
            if [[ $(jq --argjson engineers "$engineers" '[.[] | select(. | IN($engineers[]))] | length' <<< "$approvals") -gt 0 ]]
            then
              if [[ $(jq --argjson qa_members "$qa_members" '[.[] | select(. | IN($qa_members[]))] | length' <<< "$approvals") -gt 0 ]]
              then
                exit 0
              else
                exit 1
              fi
            else
              exit 1
            fi
          else
            exit 1
          fi
