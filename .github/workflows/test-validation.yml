name: '[Test] Validation Matrix'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to test
        required: true
        type: choice
        options:
          - staging
          - production
          - test
      lane:
        description: Lane to test
        required: true
        type: choice
        options:
          - on_demand
          - review
          - release
          - qa
          - rc

jobs:
  test_validation:
    name: Test Validation Matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Test validation logic
        run: |
          # Test the validation logic without running builds
          declare -A valid_combinations
          valid_combinations["production,review"]="‚úÖ"
          valid_combinations["production,release"]="‚úÖ"
          valid_combinations["production,on_demand"]="‚úÖ"
          valid_combinations["staging,qa"]="‚úÖ" 
          valid_combinations["staging,rc"]="‚úÖ"
          valid_combinations["staging,on_demand"]="‚úÖ"
          valid_combinations["test,qa"]="‚úÖ"
          
          COMBO="${{ inputs.environment }},${{ inputs.lane }}"
          echo "üîç Testing combination: $COMBO"
          echo "Environment: ${{ inputs.environment }}"
          echo "Lane: ${{ inputs.lane }}"
          echo ""
          
          if [[ -z "${valid_combinations[$COMBO]}" ]]; then
            echo "‚ùå INVALID COMBINATION"
            echo "This combination would FAIL validation in the real build workflow"
            echo "The build would stop with an error and send a Slack notification"
            echo ""
            echo "Valid combinations are:"
            for combo in "${!valid_combinations[@]}"; do
              echo "  ‚úÖ $combo"
            done
          else
            echo "‚úÖ VALID COMBINATION"
            echo "This combination would PASS validation in the real build workflow"
            echo "The build would proceed normally"
          fi

  simulate_build_validation:
    name: Simulate Build Validation (No Actual Build)
    runs-on: ubuntu-latest
    steps:
      - name: Simulate what would happen in build workflow
        run: |
          echo "üé≠ SIMULATION: What would happen in the actual build workflow"
          echo ""
          echo "Inputs received:"
          echo "  Environment: ${{ inputs.environment }}"
          echo "  Lane: ${{ inputs.lane }}"
          echo ""
          
          # Simulate the validation step from build_android.yml/build_ios.yml
          declare -A valid_combinations
          valid_combinations["production,review"]="‚úÖ"
          valid_combinations["production,release"]="‚úÖ"
          valid_combinations["production,on_demand"]="‚úÖ"
          valid_combinations["staging,qa"]="‚úÖ"
          valid_combinations["staging,rc"]="‚úÖ"
          valid_combinations["staging,on_demand"]="‚úÖ"
          valid_combinations["test,qa"]="‚úÖ"
          
          COMBO="${{ inputs.environment }},${{ inputs.lane }}"
          
          if [[ -z "${valid_combinations[$COMBO]}" ]]; then
            echo "üí• SIMULATION: Build would FAIL here with validation error"
            echo "üö® Slack notification would be sent with error message"
            echo "‚õî Build would exit with code 1 - no actual build would occur"
            echo ""
            echo "Error message that would appear:"
            echo "‚ùå ERROR: Invalid environment and lane combination"
            echo "Environment: ${{ inputs.environment }}"
            echo "Lane: ${{ inputs.lane }}"
          else
            echo "‚úÖ SIMULATION: Validation would PASS"
            echo "üì¶ Build would continue with dependency installation"
            echo "üîß Environment variables would be set with: yarn env:${{ inputs.environment }}"
            echo "üöÄ Fastlane would run with lane: ${{ inputs.lane }}"
          fi