#
# Detox e2e tests in CI
#

name: '[e2e] Android Detox Test Run'

on:
  push:
    branches:
      - 'dependabot/**'
  workflow_dispatch:
    inputs:
      tests_to_run:
        description: 'List tests to test in ["test name", "test name"] format.  All tests will run if left blank'
        type: string
        required: false
      testRail_name:
        description: 'Name testRail run (will default to date if blank)'
        type: string
        required: false
      run_testRail:
        description: 'Add results to testRail?'
        type: boolean
        required: false
  schedule:
    - cron: '0 4 * * 1,2,3,4,5'
  workflow_run:
    workflows: ['[Release] New Release Issue']
    types: 
      - in_progress
  
defaults:
  run:
    working-directory: VAMobile

env:
  # IAM staging app client secret
  APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
  # IAM production app client secret
  APP_CLIENT_SECRET_PROD: ${{ secrets.APP_CLIENT_SECRET_PROD }}
  # Android Key Store Key Alias
  ANDROID_KS_KEY_ALIAS: ${{ secrets.ANDROID_KS_KEY_ALIAS }}
  # Android Key Store Key Alias Password
  ANDROID_KS_KEY_PW: ${{ secrets.ANDROID_KS_KEY_PW }}
  # Android Key Store Key Password
  ANDROID_KS_PW: ${{ secrets.ANDROID_KS_PW }}
  # App ID for Android project in Firebase
  FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
  # Filepath for firebase distribution key. Also used by fastlane
  FIREBASE_DIST_KEY_FILEPATH: ${{ secrets.FIREBASE_DIST_KEY_FILEPATH }}
  # Slack API token
  SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

jobs:
  start_slack_thread:
    if: github.event_name == 'schedule'
    name: Start Slack thread
    uses: ./.github/workflows/start_slack_thread.yml
    secrets: inherit
    with:
      channel_name: va-mobile-build-alerts
      message: 'Starting E2E Android tests. Please see :thread: for results. This process may take a while.'

  matrix-e2e-android:
    if: github.event.inputs.tests_to_run != ''
    runs-on: macos-latest-xl
    strategy:
      fail-fast: false
      matrix:
        testsuite: ${{ fromJSON(github.event.inputs.tests_to_run) }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set git config
        run: |
            git config --global user.name 'VA Automation Bot'
            git config --global user.email 'va-mobileapp@adhocteam.us'

      - name: Decode base64 encoded keys
        working-directory: VAMobile/android
        run: |
          mkdir keys
          cd keys
          echo "${{ secrets.GOOGLE_KS }}" | base64 --decode > vamobile
          echo "${{ secrets.GOOGLE_SA_JSON }}" | base64 --decode > service-account.json
          echo "${{ secrets.FIREBASE_DIST_FILE_BASE64 }}" | base64 --decode > firebase-dist.json
          cd ../app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > google-services.json

      - name: Setup ruby and restore bundler cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.2'
          bundler-cache: true
          working-directory: VAMobile/android

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'microsoft'

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: 'VAMobile/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: './VAMobile/yarn.lock'

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Bundle Android app
        run: yarn e2e:android-build

      - name: Run e2e tests for Android
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: VAMobile
          api-level: 28
          profile: pixel_6_pro
          force-avd-creation: false
          disable-animations: true
          arch: x86_64
          avd-name: Pixel_4_XL_API_28
          script: yarn e2e:android-test /e2e/tests/${{matrix.testsuite}}.e2e --take-screenshots failing --updateSnapshot --headless

      - name: Upload e2e-junit
        if: failure() || success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.testsuite}}-e2e-junit
          path: VAMobile/e2e/test_reports/e2e-junit.xml

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts-${{ runner.os }}-${{ github.run_id }}
          path: VAMobile/artifacts

  e2e-android:
    if: always() && github.event.inputs.tests_to_run == ''
    needs: start_slack_thread
    runs-on: macos-latest-xl
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set git config
        run: |
            git config --global user.name 'VA Automation Bot'
            git config --global user.email 'va-mobileapp@adhocteam.us'

      - name: Decode base64 encoded keys
        working-directory: VAMobile/android
        run: |
          mkdir keys
          cd keys
          echo "${{ secrets.GOOGLE_KS }}" | base64 --decode > vamobile
          echo "${{ secrets.GOOGLE_SA_JSON }}" | base64 --decode > service-account.json
          echo "${{ secrets.FIREBASE_DIST_FILE_BASE64 }}" | base64 --decode > firebase-dist.json
          cd ../app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > google-services.json

      - name: Setup ruby and restore bundler cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.2'
          bundler-cache: true
          working-directory: VAMobile/android

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'microsoft'

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: 'VAMobile/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: './VAMobile/yarn.lock'

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Bundle Android app
        run: yarn e2e:android-build

      - name: Run e2e tests for Android
        id: run_e2e_tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: VAMobile
          api-level: 28
          profile: pixel_6_pro
          force-avd-creation: false
          disable-animations: true
          arch: x86_64
          avd-name: Pixel_4_XL_API_28
          script: yarn e2e:android-test --take-screenshots failing --updateSnapshot --headless
        continue-on-error: true

      - name: Upload e2e-junit
        if: failure() || success()
        uses: actions/upload-artifact@v3
        with:
          name: -e2e-junit
          path: VAMobile/e2e/test_reports/e2e-junit.xml
          
      - name: Inform Slack of Failure
        id: post_failure
        if: steps.run_e2e_tests.outcome == 'failure' && github.event_name == 'schedule'
        run: |
          ts=$(curl -X POST -H 'Authorization: Bearer '"$SLACK_API_TOKEN"' ' \
            -H 'Content-type: application/json' \
            --data '{"channel":"'${{needs.start_slack_thread.outputs.channel_id}}'","thread_ts":"'${{needs.start_slack_thread.outputs.thread_ts}}'","text":"Failed! Please check workflow for results: https://github.com/department-of-veterans-affairs/va-mobile-app/actions"}' \
            https://slack.com/api/chat.postMessage|
            jq -r '.ts')
          echo SLACK_THREAD_TS=${ts} >> $GITHUB_OUTPUT

      - name: Inform Slack of success
        id: post_success
        if: steps.run_e2e_tests.outcome == 'success' && github.event_name == 'schedule'
        run: |
          ts=$(curl -X POST -H 'Authorization: Bearer '"$SLACK_API_TOKEN"' ' \
            -H 'Content-type: application/json' \
            --data '{"channel":"'${{needs.start_slack_thread.outputs.channel_id}}'","thread_ts":"'${{needs.start_slack_thread.outputs.thread_ts}}'","text":"Success! All E2E tests have passed"}' \
            https://slack.com/api/chat.postMessage|
            jq -r '.ts')
          echo SLACK_THREAD_TS=${ts} >> $GITHUB_OUTPUT

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts-${{ runner.os }}-${{ github.run_id }}
          path: VAMobile/artifacts

  matrix-send_test_results_to_testrail:
    if: always() && github.event.inputs.run_testRail == 'true' && github.event.inputs.tests_to_run != ''
    needs: matrix-e2e-android
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        testsuite: ${{ fromJSON(github.event.inputs.tests_to_run) }}     
    name: Update testRail Results
    uses: ./.github/workflows/update_testrail_results.yml
    with: 
      test_names: "${{matrix.testsuite}}"
      testRail_name: ${{ inputs.testRail_name }}
    secrets: inherit

  send_test_results_to_testrail:
    if: always() && github.event.inputs.tests_to_run == '' && ((github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'skipped') || github.event.inputs.run_testRail == 'true')
    needs: e2e-android
    name: Update testRail Results
    uses: ./.github/workflows/update_testrail_results.yml
    with: 
      test_names: ""
      testRail_name: ${{ inputs.testRail_name }}
    secrets: inherit
