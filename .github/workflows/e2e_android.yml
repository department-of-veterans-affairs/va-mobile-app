#
# Detox e2e tests in CI
#

name: '[e2e] Android Detox Test Run'

on:
  push:
    branches:
        - 'dependabot/**'
  pull_request:
    types: synchronize
    paths:
      - 'VAMobile/src/**'
  workflow_dispatch:
    inputs:
      run_full_test:
        description: 'Run full e2e test?'
        type: boolean
        required: false
      tests_to_run:
        description: 'List tests to test in ["test name", "test name"] format.  Leave blank if running full e2e test.'
        type: string
        required: false
      testRail_name:
        description: 'Name testRail run (will default to date if blank)'
        type: string
        required: false
      run_testRail:
        description: 'Add results to testRail?'
        type: boolean
        required: false
      device_specific:
        description: 'Is your testRail run Android only? (only check if adding results to testRail)'
        type: boolean
        required: false
  schedule:
    - cron: '0 4 * * 1,2,3,4,5'
  workflow_run:
    workflows: ['[Release] New Release Issue']
    types: 
      - in_progress

concurrency:
  group: android-detox-${{ github.ref }}
  cancel-in-progress: true  

defaults:
  run:
    working-directory: VAMobile

env:
  # IAM staging app client secret
  APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
  # IAM production app client secret
  APP_CLIENT_SECRET_PROD: ${{ secrets.APP_CLIENT_SECRET_PROD }}
  # Android Key Store Key Alias
  ANDROID_KS_KEY_ALIAS: ${{ secrets.ANDROID_KS_KEY_ALIAS }}
  # Android Key Store Key Alias Password
  ANDROID_KS_KEY_PW: ${{ secrets.ANDROID_KS_KEY_PW }}
  # Android Key Store Key Password
  ANDROID_KS_PW: ${{ secrets.ANDROID_KS_PW }}
  # App ID for Android project in Firebase
  FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
  # Filepath for firebase distribution key. Also used by fastlane
  FIREBASE_DIST_KEY_FILEPATH: ${{ secrets.FIREBASE_DIST_KEY_FILEPATH }}
  # Slack API token
  SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

jobs:
  start_run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'Add RC run in testrail'
        id: add_run
        run: |
          echo "" >> input.json
          testRailAccessabilityCases=(12810 37313 100980 100981)
          for ((i=0; ; i+=250)); do
            echo "i = $i"
            resp=$(curl -X GET -H 'Content-Type: application/json' \
                    -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                    "https://dsvavsp.testrail.io//index.php?/api/v2/get_cases/29&offset=$i")
            echo $(jq --compact-output '.cases | map(select(.custom_release_candidate_test_case == true and .section_id != 3239)) | map(.id)' <<< "$resp") >> input.json
            if [[ $(jq '._links.next == null' <<< "$resp") == 'true' ]];
            then
              break
            fi
          done
          echo $(jq --compact-output -s 'add' input.json)
          resp=$(curl -X GET -H 'Content-Type: application/json' \
                    -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                    "https://dsvavsp.testrail.io//index.php?/api/v2/get_cases/29&section_id=3239")
          echo "$resp"
          length=$(echo $resp | jq '.cases | map(select(.custom_release_candidate_test_case == true )) | map(.id) | length')
          echo "$length"
          randomNumber=$(((RANDOM % ${length}) + 1))
          echo "$randomNumber"
          echo $(jq --compact-output '.cases | map(.id) | .[${randomNumber}]' <<< "$resp") >> input.json
          echo $(jq --compact-output -s 'add' input.json)
