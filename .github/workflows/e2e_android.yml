#
# Detox e2e tests in CI
#

name: '[e2e] Android Detox Test Run'

on:
  workflow_dispatch:
  # pull_request:
  push:

defaults:
  run:
    working-directory: VAMobile

env:
  # IAM staging app client secret
  APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
  # IAM production app client secret
  APP_CLIENT_SECRET_PROD: ${{ secrets.APP_CLIENT_SECRET_PROD }}
  # Android Key Store Key Alias
  ANDROID_KS_KEY_ALIAS: ${{ secrets.ANDROID_KS_KEY_ALIAS }}
  # Android Key Store Key Alias Password
  ANDROID_KS_KEY_PW: ${{ secrets.ANDROID_KS_KEY_PW }}
  # Android Key Store Key Password
  ANDROID_KS_PW: ${{ secrets.ANDROID_KS_PW }}
  # App ID for Android project in Firebase
  FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
  # Filepath for firebase distribution key. Also used by fastlane
  FIREBASE_DIST_KEY_FILEPATH: ${{ secrets.FIREBASE_DIST_KEY_FILEPATH }}

jobs:
  e2e-android:
    runs-on: ubuntu-4-cores-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set git config
        run: |
            git config --global user.name 'VA Automation Bot'
            git config --global user.email 'va-mobileapp@adhocteam.us'

      - name: Decode base64 encoded keys
        working-directory: VAMobile/android
        run: |
          mkdir keys
          cd keys
          echo "${{ secrets.GOOGLE_KS }}" | base64 --decode > vamobile
          echo "${{ secrets.GOOGLE_SA_JSON }}" | base64 --decode > service-account.json
          echo "${{ secrets.FIREBASE_DIST_FILE_BASE64 }}" | base64 --decode > firebase-dist.json
          cd ../app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > google-services.json

      - name: Setup ruby and restore bundler cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.2'
          bundler-cache: true
          working-directory: VAMobile/android

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'microsoft'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          cache-dependency-path: './VAMobile/yarn.lock'

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Bundle Android app
        run: yarn e2e:android-build

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-28

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run e2e tests for Android
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          run: yarn e2e:android-test --take-screenshots failing --updateSnapshot --headless

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts-${{ runner.os }}-${{ github.run_id }}
          path: VAMobile/artifacts
