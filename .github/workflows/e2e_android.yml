#
# Detox e2e tests in CI
#

name: '[e2e] Android Detox Test Run'

on:
  workflow_dispatch:
  # pull_request:
  push:

defaults:
  run:
    working-directory: VAMobile

env:
  # IAM staging app client secret
  APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
  # IAM production app client secret
  APP_CLIENT_SECRET_PROD: ${{ secrets.APP_CLIENT_SECRET_PROD }}
  # Android Key Store Key Alias
  ANDROID_KS_KEY_ALIAS: ${{ secrets.ANDROID_KS_KEY_ALIAS }}
  # Android Key Store Key Alias Password
  ANDROID_KS_KEY_PW: ${{ secrets.ANDROID_KS_KEY_PW }}
  # Android Key Store Key Password
  ANDROID_KS_PW: ${{ secrets.ANDROID_KS_PW }}
  # App ID for Android project in Firebase
  FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
  # Filepath for firebase distribution key. Also used by fastlane
  FIREBASE_DIST_KEY_FILEPATH: ${{ secrets.FIREBASE_DIST_KEY_FILEPATH }}
  # Android Emulator Setup Variables
  EMULATOR_NAME: nexus
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis_playstore
  API_LEVEL: 28
  ANDROID_BUILD_TOOLS_VERSION: 28.0.1
  ANDROID_SDK_PACKAGES: system-images;android-28;google_apis_playstore;x86_64 platforms;android-28 build-tools;28.0.1 platform-tools emulator
  EMULATOR_TIMEOUT: 350

jobs:
  e2e-android:
    runs-on: ubuntu-4-cores-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set git config
        run: |
            git config --global user.name 'VA Automation Bot'
            git config --global user.email 'va-mobileapp@adhocteam.us'

      - name: Decode base64 encoded keys
        working-directory: VAMobile/android
        run: |
          mkdir keys
          cd keys
          echo "${{ secrets.GOOGLE_KS }}" | base64 --decode > vamobile
          echo "${{ secrets.GOOGLE_SA_JSON }}" | base64 --decode > service-account.json
          echo "${{ secrets.FIREBASE_DIST_FILE_BASE64 }}" | base64 --decode > firebase-dist.json
          cd ../app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > google-services.json

      - name: Setup ruby and restore bundler cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.2'
          bundler-cache: true
          working-directory: VAMobile/android

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'microsoft'
      
      - name: Add avdmanager and sdkmanager to system PATH
        run: |
            echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH
      
      - name: Install Sdk   
        run: |
           yes Y | sdkmanager --licenses
           sdkmanager --install ${ANDROID_SDK_PACKAGES}

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          cache-dependency-path: './VAMobile/yarn.lock'

      - name: Install KVM
        run: sudo apt install qemu-kvm

      - name: Check KVM permissions
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"'
          sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Bundle Android app
        run: yarn e2e:android-build
  
      - name: Build emulator
        run: |
            echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"

      - name: Launch emulator
        run: |
          bash ${GITHUB_WORKSPACE}/.github/scripts/start_emu_headless.sh
          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ${GITHUB_WORKSPACE}/.github/scripts/start_emu_headless.sh

      - name: Run e2e tests for Android
        run: yarn e2e:android-test --take-screenshots failing --updateSnapshot --headless

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts-${{ runner.os }}-${{ github.run_id }}
          path: VAMobile/artifacts
