#
# Detox screenshot gathering in CI
#

name: '[Utils] Gather iOS and Android screenshots'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  # pull_request:
  #   paths:
  #     - "VAMobile/e2e/screenshots/screenshot_data.ts"
  workflow_dispatch:

defaults:
  run:
    working-directory: VAMobile

env:
  # IAM staging app client secret
  APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
  # IAM production app client secret
  APP_CLIENT_SECRET_PROD: ${{ secrets.APP_CLIENT_SECRET_PROD }}
  # Slack API token
  SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
  # App Store Connect Issuer ID
  APPSTORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ISSUER_ID }}
  # App Store Connect Key Id
  APPSTORE_CONNECT_API_KEY_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ID }}
  # Path to write secret key to. Also used by fastlane
  APPSTORE_CONNECT_FILEPATH: './AppStoreConnectKey.p8'
  # Xcode project file name
  IOS_PROJ_FILE: 'VAMobile.xcodeproj'
  # Xcode scheme to build
  IOS_SCHEME: 'VAMobileRelease'
  # Fast lane patch password
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

jobs:
  start_slack_message:
    name: Start Slack message
    uses: ./.github/workflows/start_slack_thread.yml
    secrets: inherit
    with:
      channel_name: va-mobile-sandbox
      message: 'Generating new App Store images for iOS and Android. This process may take a while.'

  generate-iphone-screenshots:
    name: Generate iPhone Screenshots
    runs-on: macos-14-xlarge
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Decode base64 encoded App Store Connect API key and GoogleService-Info.plist
        working-directory: VAMobile/ios
        run: |
          echo "${{ secrets.APPSTORE_CONNECT_BASE64 }}" | base64 --decode > "$APPSTORE_CONNECT_FILEPATH"
          echo "${{ secrets.IOS_GS_PLIST_BASE64 }}" | base64 --decode > GoogleService-Info.plist

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: 'VAMobile/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: './VAMobile/yarn.lock'

      - name: Install macOS dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install fastlane
          brew install imagemagick
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Install pods
        working-directory: VAMobile/ios
        run: pod install

      - name: Bundle iOS app
        run: yarn e2e:ios-build
        working-directory: VAMobile

      - name: Run iOS (iPhone) Emulator
        uses: futureware-tech/simulator-action@v4
        with:
          model: 'iPhone 15 Pro Max'
          shutdown_after_job: true

      - name: Run Detox iOS (iPhone) steps
        run: |
          yarn detox test -c ios ./screenshot.e2e.ts
        working-directory: VAMobile

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'ios-iphone-screenshots-unaltered'
          path: VAMobile/artifacts/

  generate-ipad-screenshots:
    name: Generate iPad Screenshots
    runs-on: macos-14-xlarge
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Decode base64 encoded App Store Connect API key and GoogleService-Info.plist
        working-directory: VAMobile/ios
        run: |
          echo "${{ secrets.APPSTORE_CONNECT_BASE64 }}" | base64 --decode > "$APPSTORE_CONNECT_FILEPATH"
          echo "${{ secrets.IOS_GS_PLIST_BASE64 }}" | base64 --decode > GoogleService-Info.plist

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: 'VAMobile/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: './VAMobile/yarn.lock'

      - name: Install macOS dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install fastlane
          brew install imagemagick
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Install pods
        working-directory: VAMobile/ios
        run: pod install

      - name: Bundle iOS app
        run: yarn e2e:ios-build
        working-directory: VAMobile

      - name: Run iPad Emulator
        uses: futureware-tech/simulator-action@v4
        with:
          model: 'iPad Pro (12.9-inch) (6th generation)'
          shutdown_after_job: true

      - name: Run Detox iPad steps
        run: |
          yarn detox test -c ipad ./screenshot.e2e.ts
        working-directory: VAMobile

      - name: Upload iPad artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'ios-ipad-screenshots-unaltered'
          path: VAMobile/artifacts/

  generate-android-screenshots:
    name: Generate Android Screenshots
    runs-on: ubuntu-4-cores-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libpulse-dev

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: 'VAMobile/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: './VAMobile/yarn.lock'

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Decode base64 encoded keys
        working-directory: VAMobile/android
        run: |
          mkdir keys
          cd keys
          echo "${{ secrets.GOOGLE_KS }}" | base64 --decode > vamobile
          echo "${{ secrets.GOOGLE_SA_JSON }}" | base64 --decode > service-account.json
          echo "${{ secrets.FIREBASE_DIST_FILE_BASE64 }}" | base64 --decode > firebase-dist.json
          cd ../app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > google-services.json

      - name: Bundle Android app
        run: yarn e2e:android-build
        working-directory: VAMobile

      - name: Run Detox Android Steps
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          working-directory: VAMobile
          target: google_apis
          arch: x86_64
          avd-name: Pixel_6_Pro_API_33
          profile: pixel_6_pro
          channel: stable
          script: |
            yarn detox test -c android ./screenshot.e2e.ts

      - name: Upload android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'android-screenshots-unaltered'
          path: VAMobile/artifacts/*

  combine-and-frame-images:
    name: Combine and Frame Images
    runs-on: macos-14-xlarge
    needs:
      [
        generate-iphone-screenshots,
        generate-ipad-screenshots,
        generate-android-screenshots,
      ]
    outputs:
      outcome: ${{ steps.run_images.outcome }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          working-directory: VAMobile/ios

      - name: Install Ruby gems
        working-directory: VAMobile/ios
        run: bundle install

      - name: Install macOS dependencies
        run: |
          brew install fastlane
          brew install imagemagick
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: Download iPhone screenshots
        uses: actions/download-artifact@v4
        with:
          name: 'ios-iphone-screenshots-unaltered'
          path: VAMobile/artifacts_iphone

      - name: Download iPad screenshots
        uses: actions/download-artifact@v4
        with:
          name: 'ios-ipad-screenshots-unaltered'
          path: VAMobile/artifacts_ipad

      - name: Download Android screenshots
        uses: actions/download-artifact@v4
        with:
          name: 'android-screenshots-unaltered'
          path: VAMobile/artifacts_android

      - name: Combine screenshots
        run: |
          yarn
          mkdir -p VAMobile/artifacts
          mv VAMobile/artifacts_iphone VAMobile/artifacts/ios
          mv VAMobile/artifacts_ipad VAMobile/artifacts/ipad
          mv VAMobile/artifacts_android VAMobile/artifacts/android
        working-directory: .

      - name: gather-and-make-app-store-images
        id: run_images
        working-directory: VAMobile
        run: |
          ../.github/scripts/app-store-images/generate_images.sh

      - name: Upload framed artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'app-store-images-framed'
          path: .github/scripts/app-store-images/framed_images/*

  commit-screenshots:
    name: Commit Screenshots
    runs-on: ubuntu-latest
    needs: [combine-and-frame-images]
    # if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: VAMobile
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Download framed screenshots
        uses: actions/download-artifact@v4
        with:
          name: 'app-store-images-framed'
          path: framed_images

      # - name: Move framed images
      #   run: |
      #     mkdir -p ios/fastlane/screenshots/en-US/
      #     mkdir -p ios/fastlane/screenshots_ipad/en-US/
      #     mkdir -p android/fastlane/metadata/android/en-US/images/phoneScreenshots/
      #     shopt -s dotglob
      #     mv ../framed_images/ios/* ios/fastlane/screenshots/en-US/
      #     mv ../framed_images/ipad/* ios/fastlane/screenshots_ipad/en-US/
      #     mv ../framed_images/android/* android/fastlane/metadata/android/en-US/images/phoneScreenshots/

      - name: Commit and push screenshots
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ci: update app store screenshots"
            git push
          fi

  success-slack-message:
    name: Success Slack thread
    needs: commit-screenshots
    if: ${{ success() }}
    uses: ./.github/workflows/start_slack_thread.yml
    secrets: inherit
    with:
      channel_name: va-mobile-sandbox
      message: 'App store images generated successfully. See <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for results.'

  failure-slack-message:
    name: Failure Slack thread
    needs: commit-screenshots
    if: ${{ failure() }}
    uses: ./.github/workflows/start_slack_thread.yml
    secrets: inherit
    with:
      channel_name: va-mobile-sandbox
      message: 'App store image generation failed. See <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for results.'
