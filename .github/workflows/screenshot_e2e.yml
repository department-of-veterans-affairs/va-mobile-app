#
# Detox screenshot gathering in CI
#

name: "[Utils] Gather iOS and Android screenshots"

on:
  push:
  #  paths:
  #    - "VAMobile/e2e/screenshots/screenshot_data.ts"
  workflow_dispatch:

defaults:
  run:
    working-directory: VAMobile

env:
  # IAM staging app client secret
  APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
  # IAM production app client secret
  APP_CLIENT_SECRET_PROD: ${{ secrets.APP_CLIENT_SECRET_PROD }}
  # Slack API token
  SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
  # App Store Connect Issuer ID
  APPSTORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ISSUER_ID }}
  # App Store Connect Key Id
  APPSTORE_CONNECT_API_KEY_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ID }}
  # Path to write secret key to. Also used by fastlane
  APPSTORE_CONNECT_FILEPATH: "./AppStoreConnectKey.p8"
  # Xcode project file name
  IOS_PROJ_FILE: "VAMobile.xcodeproj"
  # Xcode scheme to build
  IOS_SCHEME: "VAMobileRelease"
  # Fast lane patch password
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

jobs:
  start_slack_thread:
    name: Start Slack thread
    uses: ./.github/workflows/start_slack_thread.yml
    secrets: inherit
    with:
      channel_name: va-mobile-sandbox
      message: "Generating new App Store images for iOS and Android. Please see :thread: for results. This process may take a while."

  generate-iphone-screenshots:
    name: Generate iPhone Screenshots
    runs-on: macos-latest-xlarge
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Decode base64 encoded App Store Connect API key and GoogleService-Info.plist
        working-directory: VAMobile/ios
        run: |
          echo "${{ secrets.APPSTORE_CONNECT_BASE64 }}" | base64 --decode > "$APPSTORE_CONNECT_FILEPATH"
          echo "${{ secrets.IOS_GS_PLIST_BASE64 }}" | base64 --decode > GoogleService-Info.plist

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: "VAMobile/.nvmrc"
          cache: "yarn"
          cache-dependency-path: "./VAMobile/yarn.lock"

      - name: Install macOS dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install fastlane
          brew install imagemagick
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Install pods
        working-directory: VAMobile/ios
        run: pod install

      - name: Bundle iOS app
        run: yarn e2e:ios-build
        working-directory: VAMobile

      - name: Run iOS (iPhone) Emulator
        uses: futureware-tech/simulator-action@v4
        with:
          model: "iPhone 16 Pro Max"
          shutdown_after_job: true

      - name: Run Detox iOS (iPhone) steps
        run: |
          yarn detox test -c ios ./screenshot.e2e.ts
        working-directory: VAMobile

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "ios-iphone-screenshots"
          path: VAMobile/artifacts/

  generate-ipad-screenshots:
    name: Generate iPad Screenshots
    runs-on: macos-latest-xlarge
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Decode base64 encoded App Store Connect API key and GoogleService-Info.plist
        working-directory: VAMobile/ios
        run: |
          echo "${{ secrets.APPSTORE_CONNECT_BASE64 }}" | base64 --decode > "$APPSTORE_CONNECT_FILEPATH"
          echo "${{ secrets.IOS_GS_PLIST_BASE64 }}" | base64 --decode > GoogleService-Info.plist

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: "VAMobile/.nvmrc"
          cache: "yarn"
          cache-dependency-path: "./VAMobile/yarn.lock"

      - name: Install macOS dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install fastlane
          brew install imagemagick
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Install pods
        working-directory: VAMobile/ios
        run: pod install

      - name: Bundle iOS app
        run: yarn e2e:ios-build
        working-directory: VAMobile

      - name: Run iPad Emulator
        uses: futureware-tech/simulator-action@v4
        with:
          model: "iPad Pro 13-inch (M4)"
          shutdown_after_job: true

      - name: Run Detox iPad steps
        run: |
          yarn detox test -c ipad ./screenshot.e2e.ts
        working-directory: VAMobile

      - name: Upload iPad artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "ios-ipad-screenshots"
          path: VAMobile/artifacts/

  generate-android-screenshots:
    name: Generate Android Screenshots
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup node and restore yarn cache
        uses: actions/setup-node@v3
        with:
          node-version-file: "VAMobile/.nvmrc"
          cache: "yarn"
          cache-dependency-path: "./VAMobile/yarn.lock"

      - name: Install npm dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Set app environment variables
        run: yarn env:staging

      - name: Decode base64 encoded keys
        working-directory: VAMobile/android
        run: |
          mkdir keys
          cd keys
          echo "${{ secrets.GOOGLE_KS }}" | base64 --decode > vamobile
          echo "${{ secrets.GOOGLE_SA_JSON }}" | base64 --decode > service-account.json
          echo "${{ secrets.FIREBASE_DIST_FILE_BASE64 }}" | base64 --decode > firebase-dist.json
          cd ../app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > google-services.json

      - name: Bundle Android app
        run: yarn e2e:android-build
        working-directory: VAMobile

      - name: Run Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          working-directory: VAMobile
          target: google_apis
          arch: x86_64
          avd-name: Pixel_6_Pro_API_33
          profile: pixel_6_pro

      - name: Run Detox Android Steps
        run: yarn detox test -c android ./screenshot.e2e.ts
        working-directory: VAMobile

      - name: Upload android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "android-screenshots"
          path: VAMobile/artifacts/*

  combine-and-frame-images:
    name: Combine and Frame Images
    runs-on: ubuntu-latest
    needs: [generate-iphone-screenshots, generate-ipad-screenshots, generate-android-screenshots]
    outputs:
      outcome: ${{ steps.run_images.outcome }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Download iPhone screenshots
        uses: actions/download-artifact@v4
        with:
          name: "ios-iphone-screenshots"
          path: VAMobile/artifacts_iphone

      - name: Download iPad screenshots
        uses: actions/download-artifact@v4
        with:
          name: "ios-ipad-screenshots"
          path: VAMobile/artifacts_ipad

      - name: Download Android screenshots
        uses: actions/download-artifact@v4
        with:
          name: "android-screenshots"
          path: VAMobile/artifacts_android

      - name: Combine screenshots
        run: |
          mkdir -p VAMobile/artifacts
          mv VAMobile/artifacts_iphone/* VAMobile/artifacts/
          mv VAMobile/artifacts_ipad/* VAMobile/artifacts/
          mv VAMobile/artifacts_android/* VAMobile/artifacts/
        working-directory: .

      - name: gather-and-make-app-store-images
        id: run_images
        working-directory: VAMobile
        run: |
          ../.github/scripts/app-store-images/generate_images.sh

      - name: Upload framed artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "ios-android-app-store-images-framed"
          path: .github/scripts/app-store-images/framed_images/*

  output-slack-results:
    needs: combine-and-frame-images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Inform Slack of Success
        if: ${{ success() }}
        id: inform_slack_success
        shell: bash
        run: |
          ts=$(curl -X POST -H 'Authorization: Bearer "${{ secrets.SLACK_API_TOKEN }}" ' \
            -H 'Content-type: application/json' \
            --data '{"channel":"${{needs.start_slack_thread.outputs.channel_id}}","thread_ts":"${{needs.start_slack_thread.outputs.thread_ts}}","text":"App Store images created successfully." See <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for results."}' \
            https://slack.com/api/chat.postMessage|\
            jq -r '.ts')
          echo "SLACK_THREAD_TS=${ts}" >> $GITHUB_OUTPUT

      - name: Inform Slack of Failure
        if: ${{ failure() }}
        id: inform_slack_failure
        shell: bash
        run: |
          ts=$(curl -X POST -H 'Authorization: Bearer "${{ secrets.SLACK_API_TOKEN }}" ' \
            -H 'Content-type: application/json' \
            --data '{"channel":"${{needs.start_slack_thread.outputs.channel_id}}","thread_ts":"${{needs.start_slack_thread.outputs.thread_ts}}","text":"App Store image creation failed." See <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for results."}' \
            https://slack.com/api/chat.postMessage|\
            jq -r '.ts')
          echo "SLACK_THREAD_TS=${ts}" >> $GITHUB_OUTPUT