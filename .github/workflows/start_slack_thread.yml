# Reusable workflow for starting a Slack thread in the provided channel
name: '[Utils] Start Slack Thread'

on:
  workflow_call:
    inputs:
      channel_name:
        description: 'Name of the Slack channel where the thread should be started.'
        type: string
        default: 'va-mobile-build-alerts'
      message:
        description: 'Text to display for the message starting the thread.'
        type: string
        required: true
    outputs:
      thread_ts:
        description: 'Timestamp of the Slack thread that was created.'
        value: ${{ jobs.start_thread.outputs.thread_ts }}

env:
  SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

jobs:
  get_channel_id:
    name: Get channel ID
    runs-on: ubuntu-latest
    outputs:
      channel_id: ${{ steps.search_slack.outputs.SLACK_CHANNEL_ID }}
    steps:
      - name: Search Slack for channel ID
        id: search_slack
        run: |
          id=$(curl -X GET -H 'Authorization: Bearer '"$SLACK_API_TOKEN"' ' \
            -H 'Content-type: application/x-www-form-urlencoded' \
            https://slack.com/api/conversations.list\?limit=1000 |
            jq '.channels[] | .name as $data | select($data == "${{inputs.channel_name}}").id' )
          echo SLACK_CHANNEL_ID=${id} >> $GITHUB_OUTPUT
  start_thread:
    name: Start thread
    runs-on: ubuntu-latest
    needs: get_channel_id
    outputs:
      thread_ts: ${{ steps.post_message.outputs.SLACK_THREAD_TS }}
    steps:
      - name: Post message to Slack
        id: post_message
        run: |
          ts=$(curl -X POST -H 'Authorization: Bearer '"$SLACK_API_TOKEN"' ' \
            -H 'Content-type: application/json' \
            --data '{"channel":"'${{needs.get_channel_id.outputs.channel_id}}'","text":"${{inputs.message}}"}' \
            https://slack.com/api/chat.postMessage|
            jq -r '.ts')
          echo SLACK_THREAD_TS=${ts} >> $GITHUB_OUTPUT
