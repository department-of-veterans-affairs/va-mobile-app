name: "Start Release Candidate Testrail run for a release ticket"

on:
  workflow_call:
    inputs:
      version:
        description: 'Version Number (eg. v1.1.0)'
        type: string
        required: true
      releaseDate:
        description: "Go-live date for release (eg. 06/21/2022)"
        type: string
        required: true
      ticketNumber:
        description: "Issue number for release ticket (eg. 3333)"
        type: string
        required: true
      milestoneId:
        description: "Milestone id for the run to be associated with"
        type: string
        required: true
    secrets:
      TEST_RAIL_USER:
        description: "Testrail robot userid"
        required: true
      TEST_RAIL_KEY:
        description: "Testrail api key"
        required: true
    outputs:
      testrailUrl:
        value: ${{jobs.start_run.outputs.testrailUrl}}
  workflow_dispatch:
    inputs:
      version:
        description: 'Version Number (eg. v1.1.0)'
        required: true
        type: string
      releaseDate:
        description: "Go-live date for release (eg. 06/21/2022)"
        type: string
        required: true
      ticketNumber:
        description: "Issue number for release ticket (eg. 3333)"
        type: string
        required: true
      milestoneId:
        description: "Milestone id for the run to be associated with"
        type: string
        required: true
jobs:
  start_run:
    outputs:
      testrailUrl: ${{steps.add_run.outputs.url}}
    runs-on: ubuntu-latest
    steps:
      - name: 'Add RC run in testrail'
        id: add_run
        run: |
          echo "TICKET_NUMBER: ${{inputs.ticketNumber}}"
          echo "MILESTONE_ID: ${{inputs.milestoneId}}"
          echo "" >> input.json
          for ((i=0; ; i+=250)); do
            echo "i = $i"
            resp=$(curl -X GET -H 'Content-Type: application/json' \
                    -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                    "https://dsvavsp.testrail.io//index.php?/api/v2/get_cases/29&offset=$i")
            echo $(jq --compact-output '.cases | map(select(.custom_release_candidate_test_case == true)) | map(.id)' <<< "$resp") >> input.json
            if [[ $(jq '._links.next == null' <<< "$resp") == 'true' ]];
            then
              break
            fi
          done
          jq --compact-output -s 'add' input.json
          name='Regression pass for ${{github.event.inputs.version}} ${{github.event.inputs.releaseDate}} release'
          desc='QA Regression pass for ${{inputs.version}} ${{inputs.releaseDate}} release'
          response=$(curl -X POST -H 'Content-Type: application/json' \
                    -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  -d '{"suite_id": 92,"include_all": false,"name": "'"${name}"'","refs": "'"${{inputs.ticketNumber}}"'","description": "'"${desc}"'", "milestone_id": '${{inputs.milestoneId}}' , "case_ids": '$(jq --compact-output -s 'add' input.json)'}' \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/add_run/29")
          echo ${response}
          echo "::set-output name=url::$(echo ${response} |  jq '.url')"

