name: '[e2e] Update TestRail Results'

on:
  workflow_call:
    secrets:
      TEST_RAIL_USER:
        description: "TestRail robot userid"
        required: true
      TEST_RAIL_KEY:
        description: "TestRail api key"
        required: true
    inputs:
      test_names:
        type: string
        default: ''
      testRail_name:
        type: string
        default: ''
      test_specific_OS_needed:
        type: boolean
        default: false
      test_OS_name:
        type: string
        default: ''
  
defaults:
  run:
    working-directory: VAMobile

jobs:
  send_test_results_to_testrail:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: Download junit file
      #   uses: actions/download-artifact@v4
      #   with: 
      #     name: ${{inputs.test_names}}-e2e-junit
      - name: 'Find run ID in testRail'
        id: run-id-selection
        run: | 
          resp=$(curl -X GET -H 'Content-Type: application/json' \
              -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
              "https://dsvavsp.testrail.io//index.php?/api/v2/get_runs/29&is_completed=0" | jq '.runs[] | select(.name =="Regression pass for release " or .name=="'"$(date +'%Y-%m-%d')"'" or .name =="${{ inputs.testRail_name }}") | .id')
          echo "$resp"
          echo "TEST_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
          if [ "$resp" == '' ]; then
            if [[ "${{ inputs.testRail_name }}" == "" ]]; then
              if [[ ${{ inputs.test_specific_OS_needed}} == true ]]; then
                OS_name="${{inputs.test_OS_name}}: "
              else
                OS_name=''
              fi
              resp=$(curl -X POST -H 'Content-Type: application/json' \
                  -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  -d '{"suite_id": 92, "include_all": false, "name": "'"${OS_name}$(date +'%Y-%m-%d')"'"}' \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/add_run/29" )
              resp=$(curl -X GET -H 'Content-Type: application/json' \
                  -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/get_runs/29&is_completed=0" | jq '.runs[] | select(.name =="'"${OS_name}$(date +'%Y-%m-%d')"'") | .id')
              echo "$resp"
              echo "TEST_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
            else
              resp=$(curl -X POST -H 'Content-Type: application/json' \
                      -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                      -d '{"suite_id": 92, "include_all": false, "name": "${{ inputs.testRail_name }}"}' \
                      "https://dsvavsp.testrail.io//index.php?/api/v2/add_run/29" )
              resp=$(curl -X GET -H 'Content-Type: application/json' \
                    -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                    "https://dsvavsp.testrail.io//index.php?/api/v2/get_runs/29&is_completed=0" | jq '.runs[] | select(.name=="${{ inputs.testRail_name }}") | .id')
              echo "$resp"
              echo "TEST_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
            fi
          fi
      - name: 'Find section ID in testRail'
        id: section-id-selection
        run: | 
          resp=$(curl -X GET -H 'Content-Type: application/json' \
              -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
              "https://dsvavsp.testrail.io//index.php?/api/v2/get_sections/29" | jq '.sections[] | select(.name =="Automated") | .id')
          echo "$resp"
          echo "SECTION_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
      - name: Python setup
        if: always()
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      # - name: TestRail CLI upload results
      #   if: always()
      #   run: |      
      #     pip install trcli
      #     trcli -y \
      #       -h https://dsvavsp.testrail.io/ \
      #       --project "VA Mobile App" \
      #       --project-id 29 \
      #       -u ${{secrets.TEST_RAIL_USER}} \
      #       -k ${{secrets.TEST_RAIL_KEY}} \
      #       parse_junit \
      #       --run-id ${{steps.run-id-selection.outputs.TEST_RUN_ID}} \
      #       --section-id ${{steps.section-id-selection.outputs.SECTION_RUN_ID}} \
      #       -f "/home/runner/work/va-mobile-app/va-mobile-app/e2e-junit.xml"
      - name: Get Test Runs
        run: |
          getTestCaseNewName=$(curl -X GET -H 'Content-Type: application/json' \
            -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
            "https://dsvavsp.testrail.io//index.php?/api/v2/get_tests/${{steps.run-id-selection.outputs.TEST_RUN_ID}}" | jq --compact-output '[.tests[] | .title |= sub("(]).*$"; "]")]')
          getFailedTestCaseNames=$(curl -X GET -H 'Content-Type: application/json' \
            -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
            "https://dsvavsp.testrail.io//index.php?/api/v2/get_tests/${{steps.run-id-selection.outputs.TEST_RUN_ID}}&status_id=5")
          groupTestCasesByTitle=$(echo $getTestCaseNewName | jq --compact-output '[group_by(.title)[] | [.[0].title, .[0].status_id, map(.id)[]]]')
          getFirstTestNewName=$(echo $groupTestCasesByTitle | jq --compact-output '[.[] | .[0]]')
          getCasesID=$(curl -X GET -H 'Content-Type: application/json' \
                  -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/get_cases/29")
          updateRunWithNewCases=$(curl -X POST -H 'Content-Type: application/json' \
            -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
            -d '{"suite_id": 92, "include_all": false, "name": "test", "case_ids": '$(echo $getCasesID | jq --argjson testRailNames "$getFirstTestNewName" --compact-output '.cases | map(select(.title == $testRailNames[])) | map(.id)')'}' \
            "https://dsvavsp.testrail.io//index.php?/api/v2/update_run/6010")
          getTestCases=$(curl -X GET -H 'Content-Type: application/json' \
            -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
            "https://dsvavsp.testrail.io//index.php?/api/v2/get_tests/6010")
          for i in $(echo $getTestCases | jq -r '.tests[]'); do
            echo "$test"
            getTestStatusByTitle=$(echo $getTestCaseNewName | jq -c 'group_by(.title)[] | [.[0].title, [map(.status_id)[]]]')
            echo "$test2"
            testID=$(echo $i | jq '.id')
            echo "$testID"
            testName=$(echo $i | jq '.title')
            echo "$testName"
            for y in "${getTestStatusByTitle[@]}"; do
              echo "$y"
              getTestNames=$(echo $y | jq '.[0]')
              echo "$getTestNames"
              if [[ "$testName" == "$getTestNames" ]]; then
                isFailedStatus=$(echo $y | jq '.[1] | any(. == 5)')
                echo "Failed: $isFailedStatus"
                isRetestStatus=$(echo $y | jq '.[1] | any(. == 4)')
                echo "Retest: $isRetestStatus"
                isPassedStatus=$(echo $y | jq '.[1] | any(. == 1)')
                echo "Passed: $isPassedStatus"
              fi
              if [[ "$isFailedStatus" == "true" ]]; then
                updateStatus=$(curl -X POST -H 'Content-Type: application/json' \
                  -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  -d '{"status_id": 5, "comment": "$getFailedTestCaseNames"}' \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/add_result/"$i"")
              elif [[ "$isRetestStatus" != "true" ]]; then
                updateStatus=$(curl -X POST -H 'Content-Type: application/json' \
                  -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  -d '{"status_id": 4}' \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/add_result/"$i"")
              else
                updateStatus=$(curl -X POST -H 'Content-Type: application/json' \
                  -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  -d '{"status_id": 1}' \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/add_result/"$i"")
              fi
            done
          done

#Fully working minus status's
# getTestRunNewName=$(curl -X GET -H 'Content-Type: application/json' \
#   -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#   "https://dsvavsp.testrail.io//index.php?/api/v2/get_tests/${{steps.run-id-selection.outputs.TEST_RUN_ID}}" | jq --compact-output '[.tests[] | .title |= sub("(]).*$"; "]")]')
# sortTestRunNewName=$(echo $getTestRunNewName | jq --compact-output '[group_by(.title)[] | [.[0].title, .[0].status_id, map(.id)[]]]')
# echo "$sortTestRunNewName"
# getFirstTestNewName=$(echo $sortTestRunNewName | jq --compact-output '[.[] | .[0]]')
# echo "$getFirstTestNewName"
# resp=$(curl -X GET -H 'Content-Type: application/json' \
#         -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#         "https://dsvavsp.testrail.io//index.php?/api/v2/get_cases/29")
# resp4=$(curl -X POST -H 'Content-Type: application/json' \
#   -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#   -d '{"suite_id": 92, "include_all": false, "name": "test", "case_ids": '$(echo $resp | jq --argjson testRailNames "$getFirstTestNewName" --compact-output '.cases | map(select(.title == $testRailNames[])) | map(.id)')'}' \
#   "https://dsvavsp.testrail.io//index.php?/api/v2/update_run/6010")
# getTestRunNewName=$(curl -X GET -H 'Content-Type: application/json' \
#   -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#   "https://dsvavsp.testrail.io//index.php?/api/v2/get_tests/6010")
# echo "$getTestRunNewName"
# for i in $(echo $getTestRunNewName | jq -r '.tests[].id'); do
#   echo "$i"
#   echo "test2"
#   resp5=$(curl -X POST -H 'Content-Type: application/json' \
#     -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#     -d '{"status_id": 1}' \
#     "https://dsvavsp.testrail.io//index.php?/api/v2/add_result/"$i"")
# done

#[.tests | group_by(.title)[] | [.[0].title, [map(.status_id)[]]]]

# $(echo $y | jq .[1] | if any(. == 5)')"" == true ]]; then
# updateStatus=$(curl -X POST -H 'Content-Type: application/json' \
#   -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#   -d '{"status_id": 5, "comment": "$getFailedTestCaseNames"}' \
#   "https://dsvavsp.testrail.io//index.php?/api/v2/add_result/"$i"")
# elif [[ "$(echo $y | jq '.[1] | any(. == 4)')" == true ]]; then
# updateStatus=$(curl -X POST -H 'Content-Type: application/json' \
#   -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#   -d '{"status_id": 1}' \
#   "https://dsvavsp.testrail.io//index.php?/api/v2/add_result/"$i"")
# else
# updateStatus=$(curl -X POST -H 'Content-Type: application/json' \
#   -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
#   -d '{"status_id": 1}' \
#   "https://dsvavsp.testrail.io//index.php?/api/v2/add_result/"$i"")
# fi
