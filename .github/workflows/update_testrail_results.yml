name: '[e2e] Update TestRail Results'

on:
  workflow_call:
    secrets:
      TEST_RAIL_USER:
        description: "TestRail robot userid"
        required: true
      TEST_RAIL_KEY:
        description: "TestRail api key"
        required: true
    inputs:
      test_names:
        type: string
        default: ''
      testRail_name:
        type: string
        default: ''
  
defaults:
  run:
    working-directory: VAMobile

jobs:
  send_test_results_to_testrail:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download junit file
        uses: actions/download-artifact@v3
        with: 
          name: ${{inputs.test_names}}-e2e-junit
      - name: 'Find run ID in testRail'
        id: run-id-selection
        run: | 
          resp=$(curl -X GET -H 'Content-Type: application/json' \
              -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
              "https://dsvavsp.testrail.io//index.php?/api/v2/get_runs/29&is_completed=0" | jq '.runs[] | select(.name =="Regression pass for release " or .name=="'"$(date +'%Y-%m-%d')"'" or .name =="${{ inputs.testRail_name }}") | .id')
          echo "$resp"
          echo "TEST_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
          if [ "$resp" == '' ]; then
            if [[ "${{ inputs.testRail_name }}" == "" ]]; then
              resp=$(curl -X POST -H 'Content-Type: application/json' \
                    -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                    -d '{"suite_id": 92, "include_all": false, "name": "'"$(date +'%Y-%m-%d')"'"}' \
                    "https://dsvavsp.testrail.io//index.php?/api/v2/add_run/29" )
              resp=$(curl -X GET -H 'Content-Type: application/json' \
                  -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                  "https://dsvavsp.testrail.io//index.php?/api/v2/get_runs/29&is_completed=0" | jq '.runs[] | select(.name =="'"$(date +'%Y-%m-%d')"'") | .id')
              echo "$resp"
              echo "TEST_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
            else
              resp=$(curl -X POST -H 'Content-Type: application/json' \
                      -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                      -d '{"suite_id": 92, "include_all": false, "name": "${{ inputs.testRail_name }}"}' \
                      "https://dsvavsp.testrail.io//index.php?/api/v2/add_run/29" )
              resp=$(curl -X GET -H 'Content-Type: application/json' \
                    -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
                    "https://dsvavsp.testrail.io//index.php?/api/v2/get_runs/29&is_completed=0" | jq '.runs[] | select(.name=="${{ inputs.testRail_name }}") | .id')
              echo "$resp"
              echo "TEST_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
            fi
          fi
      - name: 'Find section ID in testRail'
        id: section-id-selection
        run: | 
          resp=$(curl -X GET -H 'Content-Type: application/json' \
              -u "${{secrets.TEST_RAIL_USER}}:${{secrets.TEST_RAIL_KEY}}" \
              "https://dsvavsp.testrail.io//index.php?/api/v2/get_sections/29" | jq '.sections[] | select(.name =="Automated") | .id')
          echo "$resp"
          echo "SECTION_RUN_ID=$resp" >> "$GITHUB_OUTPUT"
      - name: Python setup
        if: always()
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: TestRail CLI upload results
        if: always()
        run: |      
          pip install trcli
          trcli -y \
            -h https://dsvavsp.testrail.io/ \
            --project "VA Mobile App" \
            --project-id 29 \
            -u ${{secrets.TEST_RAIL_USER}} \
            -k ${{secrets.TEST_RAIL_KEY}} \
            parse_junit \
            --run-id ${{steps.run-id-selection.outputs.TEST_RUN_ID}} \
            --section-id ${{steps.section-id-selection.outputs.SECTION_RUN_ID}} \
            -f "/home/runner/work/va-mobile-app/va-mobile-app/e2e-junit.xml"

