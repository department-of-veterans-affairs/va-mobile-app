version: 2.1
executors:
  default:
    docker:
      - image: cimg/ruby:2.4.10-node
  android:
    docker:
      - image: circleci/android:api-30-node
    resource_class: large
  ios:
    macos:
      xcode: 12.4.0
commands:
  install_deps:
    description: "Install dependencies"
    parameters:
      environment:
        type: string
        default: staging
    steps:
      - run:
          command: |
            echo INSTALLING YARN
            npm install yarn
            echo INSTALLING NODE MODULES
            cd VAMobile
            yarn install --frozen-lockfile --non-interactive
            echo CREATING ENV FILE FOR env:<<parameters.environment>>
            yarn env:<<parameters.environment>>
            echo INSTALLING BUNDLER
            gem install bundler

  bundle_app:
    description: "Bundles the app for the OS specified"
    parameters:
      os:
        type: string
    steps:
      - run:
          command: |
            cd VAMobile
            yarn bundle:<<parameters.os>>
  lint:
    description: "Run lint"
    steps:
      - run:
          command: |
            cd VAMobile
            yarn lint:ci
          when: always
  jest:
    description: "Run jest"
    steps:
      - run:
          command: |
            cd VAMobile
            yarn test -w 1
          when: always
      - store_test_results:
          path: VAMobile/coverage/junit/
  install_pods:
    description: "install cocoa pods"
    steps:
      - run:
          command: |
            echo INSTALL COCOA PODS
            cd ~/project/VAMobile/ios
            pod install
  create_keys_directory:
    description: "create directory for google keys"
    steps:
      - run:
          command: mkdir VAMobile/android/keys
  decode_file:
    description: "Decode a base64 string to gpg, decrypt and save to destination"
    parameters:
      workingDir:
        type: string
      secretString:
        type: string
      destination:
        type: string
    steps:
      - run:
          command: |
            cd ~/project/VAMobile/<<parameters.workingDir>>
            # decode base64 secret string
            echo <<parameters.secretString>> | base64 --decode | tee <<parameters.destination>> >/dev/null
  decode_ios_keys:
    description: "Decodes all of the ios files needed to upload to Test Flight"
    steps:
      - decode_file:
          workingDir: "ios"
          secretString: ${IOS_CERTIFICATE_BASE64}
          destination: ${IOS_CERTIFICATE_PATH}
      - decode_file:
          workingDir: "ios"
          secretString: ${IOS_PROVISIONING_BASE64}
          destination: ${IOS_PROVISIONING_PATH}
      - decode_file:
          workingDir: "ios"
          secretString: ${APPSTORE_CONNECT_BASE64}
          destination: ${APPSTORE_CONNECT_FILEPATH}
  ios_fastlane:
    description: "Builds and deploys for iOS to the specified lane and version"
    parameters:
      version:
        type: string
        default: qa
      lane:
        type: string
        default: internal
    steps:
      - run:
          working_directory: VAMobile/ios
          command: bundle config set --local path 'vendor/bundle' && bundle install
      - save_cache:
          key: 1-gems-{{ checksum "VAMobile/ios/Gemfile.lock" }}
          paths:
            - VAMobile/ios/vendor/bundle
      - run:
          working_directory: VAMobile/ios
          command: bundle exec fastlane <<parameters.lane>> version:<<parameters.version>>
jobs:
  test:
    executor: default
    steps:
      - checkout
      - install_deps
      - lint
      - jest
  run:
    executor: default
    steps:
      - run: echo "run"
  build_ios_qa:
    executor: ios
    steps:
      - checkout
      - install_deps
      - decode_ios_keys
      - install_pods
      - bundle_app:
          os: "ios"
      - ios_fastlane
workflows:
  pr:
    jobs:
      - test
      - run
  fastlane:
    jobs:
      - build_ios_qa:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /^feature/fastlane1/


