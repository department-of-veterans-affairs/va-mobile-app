diff --git a/node_modules/@react-navigation/stack/src/types.tsx b/node_modules/@react-navigation/stack/src/types.tsx
index 5bafc6e..3566ebb 100644
--- a/node_modules/@react-navigation/stack/src/types.tsx
+++ b/node_modules/@react-navigation/stack/src/types.tsx
@@ -40,6 +40,11 @@ export type StackNavigationEventMap = {
   gestureCancel: { data: undefined };
 };
 
+// Animated.AnimatedInterpolation has been converted to a generic type
+// in @types/react-native 0.70. This way we can maintain compatibility
+// with all versions of @types/react-native`
+type AnimatedInterpolation = ReturnType<Animated.Value['interpolate']>;
+
 export type StackNavigationHelpers = NavigationHelpers<
   ParamListBase,
   StackNavigationEventMap
@@ -103,17 +108,17 @@ export type SceneProgress = {
   /**
    * Progress value of the current screen.
    */
-  current: Animated.AnimatedInterpolation;
+  current: AnimatedInterpolation;
   /**
    * Progress value for the screen after this one in the stack.
    * This can be `undefined` in case the screen animating is the last one.
    */
-  next?: Animated.AnimatedInterpolation;
+  next?: AnimatedInterpolation;
   /**
    * Progress value for the screen before this one in the stack.
    * This can be `undefined` in case the screen animating is the first one.
    */
-  previous?: Animated.AnimatedInterpolation;
+  previous?: AnimatedInterpolation;
 };
 
 export type StackHeaderMode = 'float' | 'screen';
@@ -361,7 +366,7 @@ export type StackCardInterpolationProps = {
     /**
      * Animated node representing the progress value of the current screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: AnimatedInterpolation;
   };
   /**
    * Values for the screen after this one in the stack.
@@ -371,7 +376,7 @@ export type StackCardInterpolationProps = {
     /**
      * Animated node representing the progress value of the next screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: AnimatedInterpolation;
   };
   /**
    * The index of the card with this interpolation in the stack.
@@ -380,15 +385,15 @@ export type StackCardInterpolationProps = {
   /**
    * Animated node representing whether the card is closing (1 - closing, 0 - not closing).
    */
-  closing: Animated.AnimatedInterpolation;
+  closing: AnimatedInterpolation;
   /**
    * Animated node representing whether the card is being swiped (1 - swiping, 0 - not swiping).
    */
-  swiping: Animated.AnimatedInterpolation;
+  swiping: AnimatedInterpolation;
   /**
    * Animated node representing multiplier when direction is inverted (-1 - inverted, 1 - normal).
    */
-  inverted: Animated.AnimatedInterpolation;
+  inverted: AnimatedInterpolation;
   /**
    * Layout measurements for various items we use for animation.
    */
@@ -440,7 +445,7 @@ export type StackHeaderInterpolationProps = {
     /**
      * Animated node representing the progress value of the current screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: AnimatedInterpolation;
   };
   /**
    * Values for the screen after this one in the stack.
@@ -450,7 +455,7 @@ export type StackHeaderInterpolationProps = {
     /**
      * Animated node representing the progress value of the next screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: AnimatedInterpolation;
   };
   /**
    * Layout measurements for various items we use for animation.
