diff --git a/node_modules/react-native-image-picker/ios/ImagePickerManager.m b/node_modules/react-native-image-picker/ios/ImagePickerManager.m
index 3b19362..59792a8 100644
--- a/node_modules/react-native-image-picker/ios/ImagePickerManager.m
+++ b/node_modules/react-native-image-picker/ios/ImagePickerManager.m
@@ -4,6 +4,7 @@
 #import <AVFoundation/AVFoundation.h>
 #import <Photos/Photos.h>
 #import <PhotosUI/PhotosUI.h>
+#import <SDWebImageWebPCoder/SDWebImageWebPCoder.h>
 
 @import MobileCoreServices;
 
@@ -130,6 +131,8 @@ -(NSMutableDictionary *)mapImageToAsset:(UIImage *)image data:(NSData *)data phA
         data = UIImageJPEGRepresentation(image, [self.options[@"quality"] floatValue]);
     } else if ([fileType isEqualToString:@"png"]) {
         data = UIImagePNGRepresentation(image);
+    } else if ([fileType isEqualToString:@"webp"]) {
+        data = [[SDImageWebPCoder sharedCoder] encodedDataWithImage:image format:SDImageFormatWebP options:nil];
     }
     
     NSMutableDictionary *asset = [[NSMutableDictionary alloc] init];
@@ -425,8 +428,10 @@ - (void)picker:(PHPickerViewController *)picker didFinishPicking:(NSArray<PHPick
         
         dispatch_group_enter(completionGroup);
 
-        if ([provider canLoadObjectOfClass:[UIImage class]]) {
-            NSString *identifier = provider.registeredTypeIdentifiers.firstObject;
+        NSString *identifier = provider.registeredTypeIdentifiers.firstObject;
+        BOOL isWebp = [identifier isEqualToString:@"org.webmproject.webp"];
+        
+        if ([provider canLoadObjectOfClass:[UIImage class]] || isWebp) {
             if ([identifier isEqualToString:@"com.apple.live-photo-bundle"]) {
                 // Handle live photos
                 identifier = @"public.jpeg";
diff --git a/node_modules/react-native-image-picker/ios/ImagePickerUtils.m b/node_modules/react-native-image-picker/ios/ImagePickerUtils.m
index b24ed46..06abffd 100644
--- a/node_modules/react-native-image-picker/ios/ImagePickerUtils.m
+++ b/node_modules/react-native-image-picker/ios/ImagePickerUtils.m
@@ -88,6 +88,7 @@ + (NSString*) getFileType:(NSData *)imageData
     const uint8_t firstByteJpg = 0xFF;
     const uint8_t firstBytePng = 0x89;
     const uint8_t firstByteGif = 0x47;
+    const uint8_t firstByteWebp = 0x52;
     
     uint8_t firstByte;
     [imageData getBytes:&firstByte length:1];
@@ -98,6 +99,8 @@ + (NSString*) getFileType:(NSData *)imageData
         return @"png";
       case firstByteGif:
         return @"gif";
+      case firstByteWebp:
+        return @"webp";
       default:
         return @"jpg";
     }
